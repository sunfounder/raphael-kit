.. note::

    ¡Hola, bienvenido a la Comunidad de Entusiastas de SunFounder Raspberry Pi, Arduino y ESP32 en Facebook! Profundiza en Raspberry Pi, Arduino y ESP32 con otros entusiastas.

    **¿Por qué unirse?**

    - **Soporte experto**: Resuelve problemas postventa y desafíos técnicos con la ayuda de nuestra comunidad y equipo.
    - **Aprende y comparte**: Intercambia consejos y tutoriales para mejorar tus habilidades.
    - **Previews exclusivos**: Accede anticipadamente a anuncios de nuevos productos y adelantos exclusivos.
    - **Descuentos especiales**: Disfruta de descuentos exclusivos en nuestros productos más recientes.
    - **Promociones y sorteos festivos**: Participa en sorteos y promociones de temporada.

    👉 ¿Listo para explorar y crear con nosotros? Haz clic en [|link_sf_facebook|] y únete hoy mismo.

.. _2.2.10_py:

2.2.10 Módulo RFID MFRC522
==============================

Introducción
-------------------

La Identificación por Radiofrecuencia (RFID) se refiere a tecnologías que utilizan 
comunicación inalámbrica entre un objeto (o etiqueta) y un dispositivo interrogador 
(o lector) para rastrear e identificar automáticamente dichos objetos.

Algunas de las aplicaciones más comunes de esta tecnología incluyen cadenas de suministro 
al por menor, cadenas de suministro militares, métodos de pago automatizados, 
seguimiento y gestión de equipaje, seguimiento de documentos y gestión farmacéutica, 
por nombrar algunas.

En este proyecto, utilizaremos RFID para lectura y escritura.

Componentes necesarios
-------------------------------

En este proyecto, necesitamos los siguientes componentes. 

.. image:: ../img/list_2.2.7.png

Es definitivamente conveniente comprar un kit completo, aquí está el enlace: 

.. list-table::
    :widths: 20 20 20
    :header-rows: 1

    *   - Nombre	
        - ELEMENTOS EN ESTE KIT
        - ENLACE
    *   - Kit Raphael
        - 337
        - |link_Raphael_kit|

También puedes comprarlos por separado en los enlaces a continuación.

.. list-table::
    :widths: 30 20
    :header-rows: 1

    *   - INTRODUCCIÓN DEL COMPONENTE
        - ENLACE DE COMPRA

    *   - :ref:`cpn_gpio_extension_board`
        - |link_gpio_board_buy|
    *   - :ref:`cpn_breadboard`
        - |link_breadboard_buy|
    *   - :ref:`cpn_wires`
        - |link_wires_buy|
    *   - :ref:`cpn_mfrc522`
        - |link_mfrc522_rfid_buy|

Diagrama esquemático
----------------------------

.. image:: ../img/image331.png


Procedimientos experimentales
------------------------------------

**Paso 1:** Construye el circuito.

.. image:: ../img/image232.png

**Paso 2:** Instala las bibliotecas :ref:`Spidev y MFRC522`.

**Paso 3:** Configura SPI (consulta :ref:spi configuration` para más detalles. Si ya has configurado SPI, omite este paso).

**Paso 4:** Ve a la carpeta del código.

.. raw:: html

   <run></run>

.. code-block::

    cd ~/raphael-kit/python

**Paso 5:** Después de ejecutar ``2.2.10_write.py``. Necesitas escribir un mensaje primero, presiona ``Enter`` para confirmar, luego coloca la tarjeta en el módulo MFRC522, espera a que aparezca "La escritura de datos está completa" y retira la tarjeta, o reescribe el mensaje en otra tarjeta y sal con ``Ctrl+C``.

.. raw:: html

    <run></run>

.. code-block::

    sudo python3 2.2.10_write.py

.. image:: ../img/write_card.png

**Paso 6:** Ahora ejecuta ``2.2.10_read.py`` para leer la información de la etiqueta o tarjeta que has escrito.

.. raw:: html

    <run></run>

.. code-block::


    sudo python3 2.2.10_read.py

**Explicación del código**

.. code-block:: python

    reader = SimpleMFRC522()

Instancia la clase ``SimpleMFRC522()``.

.. code-block:: python

    reader.read()

Esta función se utiliza para leer datos de la tarjeta. Si la lectura es exitosa, se devolverán el id y el texto.

.. code-block:: python

    reader.write(text)

Esta función se utiliza para escribir información en la tarjeta, presiona la tecla ``Enter`` para finalizar la escritura. ``text`` es la información que se escribirá en la tarjeta.

Imagen del fenómeno
-----------------------

.. image:: ../img/image233.jpeg
