 
.. note::

    Bonjour et bienvenue dans la Communaut√© Facebook des passionn√©s de Raspberry Pi, Arduino et ESP32 de SunFounder ! Plongez plus profond√©ment dans l'univers des Raspberry Pi, Arduino et ESP32 avec d'autres passionn√©s.

    **Pourquoi rejoindre ?**

    - **Support d'experts** : R√©solvez les probl√®mes apr√®s-vente et les d√©fis techniques avec l'aide de notre communaut√© et de notre √©quipe.
    - **Apprendre et partager** : √âchangez des astuces et des tutoriels pour am√©liorer vos comp√©tences.
    - **Aper√ßus exclusifs** : Acc√©dez en avant-premi√®re aux annonces de nouveaux produits et aux aper√ßus.
    - **R√©ductions sp√©ciales** : Profitez de r√©ductions exclusives sur nos produits les plus r√©cents.
    - **Promotions festives et cadeaux** : Participez √† des cadeaux et des promotions de vacances.

    üëâ Pr√™t √† explorer et √† cr√©er avec nous ? Cliquez [|link_sf_facebook|] et rejoignez-nous aujourd'hui !

.. _4.1.4_py:

4.1.4 Cam√©ra de Capture Automatique
=======================================

Introduction
-----------------

Lorsque vous √™tes absent, les petits √©cureuils dans les bois pourraient visiter votre appui de fen√™tre. Faisons une cam√©ra de capture automatique pour laisser des photos de ces petites mignonnes cr√©atures !

Composants Requis
------------------------------

Dans ce projet, nous avons besoin des composants suivants.

.. image:: ../img/3.1.18components.png
  :width: 800
  :align: center

Il est certainement pratique d'acheter un kit complet, voici le lien : 

.. list-table::
    :widths: 20 20 20
    :header-rows: 1

    *   - Nom	
        - ARTICLES DANS CE KIT
        - LIEN
    *   - Kit Raphael
        - 337
        - |link_Raphael_kit|

Vous pouvez √©galement les acheter s√©par√©ment via les liens ci-dessous.

.. list-table::
    :widths: 30 20
    :header-rows: 1

    *   - INTRODUCTION DES COMPOSANTS
        - LIEN D'ACHAT

    *   - :ref:`cpn_gpio_extension_board`
        - |link_gpio_board_buy|
    *   - :ref:`cpn_breadboard`
        - |link_breadboard_buy|
    *   - :ref:`cpn_wires`
        - |link_wires_buy|
    *   - :ref:`cpn_resistor`
        - |link_resistor_buy|
    *   - :ref:`cpn_camera_module`
        - |link_camera_buy|
    *   - :ref:`cpn_pir`
        - \-


Sch√©ma de C√¢blage
-----------------------

============== ========= ========== ===
Nom du T-Board  Brochage  wiringPi  BCM
GPIO17          Pin 11    0         17
============== ========= ========== ===

.. image:: ../img/1.1.18_schematic.png
   :width: 400
   :align: center

Proc√©dures Exp√©rimentales
------------------------------

Avant de commencer ce projet, assurez-vous d'avoir compl√©t√© :ref:`3.1.1_py`.

**√âtape 1 :** Construisez le circuit.

.. image:: ../img/3.1.18fritzing.png
  :width: 800
  :align: center

**√âtape 2 :** Pour connecter le module cam√©ra et compl√©ter la configuration, veuillez vous r√©f√©rer √† :ref:`cpn_camera_module`.

**√âtape 3 :** Acc√©dez au bureau de Raspberry Pi. Pour une meilleure exp√©rience, vous pouvez avoir besoin d'un √©cran. R√©f√©rez-vous √† : `Connect your Raspberry Pi <https://projects.raspberrypi.org/en/projects/raspberry-pi-setting-up/3>`_. Ou acc√©dez √† distance au bureau de Raspberry Pi en suivant le tutoriel d√©taill√© :ref:`remote_desktop`.

**√âtape 4 :** Ouvrez un Terminal et acc√©dez au dossier du code.

.. raw:: html

   <run></run>

.. code-block::

    cd ~/raphael-kit/python/

**√âtape 5 :** Ex√©cutez.

.. raw:: html

   <run></run>

.. code-block::

    sudo python3 4.1.4_AutomaticCaptureCamera.py

Une fois le code ex√©cut√©, le PIR d√©tectera l'environnement environnant et, s'il d√©tecte un petit √©cureuil passant, la cam√©ra prendra une photo.
L'intervalle entre les photos est de 3 secondes, et le nombre total de photos prises sera affich√© dans la fen√™tre de commande.

Il y a deux potentiom√®tres sur le module PIR : l'un pour ajuster la sensibilit√© et l'autre pour ajuster la distance de d√©tection. Pour optimiser le fonctionnement du module PIR, vous devez les tourner compl√®tement dans le sens antihoraire.

.. image:: ../img/PIR_TTE.png
    :width: 400
    :align: center

.. note::

   Vous pouvez √©galement ouvrir ``4.1.4_AutomaticCaptureCamera.py`` dans le chemin ``~/raphael-kit/python/`` avec un IDE Python, cliquer sur le bouton Ex√©cuter pour lancer le code, et arr√™ter le code avec le bouton Arr√™ter.

**Code**

.. note::
    Vous pouvez **Modifier/R√©initialiser/Copier/Ex√©cuter/Arr√™ter** le code ci-dessous. Mais avant cela, vous devez acc√©der au chemin du code source comme ``raphael-kit/python``. Apr√®s avoir modifi√© le code, vous pouvez l'ex√©cuter directement pour voir l'effet.

.. raw:: html

    <run></run>

.. code-block:: python

   #!/usr/bin/env python3

   from picamera import PiCamera
   import RPi.GPIO as GPIO
   import time
   import os
   user = os.getlogin()
   user_home = os.path.expanduser(f'~{user}')


   camera = PiCamera()

   pirPin = 17    # the pir connect to pin17

   def setup():
      GPIO.setmode(GPIO.BCM)
      GPIO.setup(pirPin, GPIO.IN)
      camera.start_preview(alpha=200)

   def main():
      i = 1
      while True:
         pirVal = GPIO.input(pirPin)
         if pirVal==GPIO.HIGH:
               camera.capture(f'{user_home}/capture%s.jpg' % i)
               print('The number is %s' % i)
               time.sleep(3)
               i = i + 1

   def destroy():
      GPIO.cleanup()
      camera.stop_preview()

   if __name__ == '__main__':
      setup()
      try:
         main()
      except KeyboardInterrupt:
         destroy()

**Explication du Code**

.. code-block:: python

   pirVal = GPIO.input(pirPin)
   if pirVal==GPIO.HIGH:
         camera.capture(f'{user_home}/capture%s.jpg' % i)
         print('The number is %s' % i)
         time.sleep(3)
         i = i + 1

Chaque fois qu'un petit √©cureuil est d√©tect√© par le module PIR, le Raspberry Pi prendra une photo et vous indiquera via la fen√™tre de commande combien de photos ont √©t√© prises. L'intervalle entre chaque photo est de 3s.

Photo du Ph√©nom√®ne
------------------------

.. image:: ../img/4.1.4spycamera.JPG
   :align: center
