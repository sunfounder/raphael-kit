.. note::

    こんにちは、SunFounderのRaspberry Pi & Arduino & ESP32愛好家コミュニティへようこそ！Facebook上でRaspberry Pi、Arduino、ESP32についてもっと深く掘り下げ、他の愛好家と交流しましょう。

    **参加する理由は？**

    - **エキスパートサポート**：コミュニティやチームの助けを借りて、販売後の問題や技術的な課題を解決します。
    - **学び＆共有**：ヒントやチュートリアルを交換してスキルを向上させましょう。
    - **独占的なプレビュー**：新製品の発表や先行プレビューに早期アクセスしましょう。
    - **特別割引**：最新製品の独占割引をお楽しみください。
    - **祭りのプロモーションとギフト**：ギフトや祝日のプロモーションに参加しましょう。

    👉 私たちと一緒に探索し、創造する準備はできていますか？[|link_sf_facebook|]をクリックして今すぐ参加しましょう！

.. _1.1.2_js:

1.1.2 RGB LED
================

はじめに
--------------

このプロジェクトでは、様々な色で点滅するRGB LEDを制御します。

**必要な部品**
------------------------------

このプロジェクトで必要な部品は以下のとおりです。

.. image:: img/list_rgb_led.png
    :align: center

一式を購入するのは非常に便利です。以下はリンクです：

.. list-table::
    :widths: 20 20 20
    :header-rows: 1

    *   - 名前
        - このキットのアイテム
        - リンク
    *   - Raphael Kit
        - 337
        - |link_Raphael_kit|

また、以下のリンクから個別に購入することもできます。

.. list-table::
    :widths: 30 20
    :header-rows: 1

    *   - コンポーネントの紹介
        - 購入リンク

    *   - :ref:`cpn_gpio_board`
        - |link_gpio_board_buy|
    *   - :ref:`cpn_breadboard`
        - |link_breadboard_buy|
    *   - :ref:`cpn_wires`
        - |link_wires_buy|
    *   - :ref:`cpn_resistor`
        - |link_resistor_buy|
    *   - :ref:`RGB LED`
        - |link_rgb_led_buy|

回路図
-----------------------

R、G、Bの各ピンを電流制限抵抗に接続した後、それぞれGPIO17、GPIO18、GPIO27に接続します。
LEDの最も長いピン（GND）はRaspberry PiのGNDに接続します。三つのピンに異なるPWM値を与えると、RGB LEDは異なる色を表示します。

.. image:: img/rgb_led_schematic.png

実験手順
----------------------------

**ステップ1:** 回路を作成します。

.. image:: img/image61.png

**ステップ2:** コードのフォルダに移動します。

.. raw:: html

    <run></run>

.. code-block::

    cd ~/raphael-kit/nodejs/

**ステップ3:** コードを実行します。

.. raw:: html

    <run></run>

.. code-block::

    sudo node rgb_led.js

コードを実行すると、RGBが赤、緑、青、黄、ピンク、シアンを表示することがわかります。

**コード**

.. code-block:: js

    const Gpio = require('pigpio').Gpio;
    const ledred = new Gpio(17, { mode: Gpio.OUTPUT });
    const ledgreen = new Gpio(18, { mode: Gpio.OUTPUT });
    const ledblue = new Gpio(27, { mode: Gpio.OUTPUT });

    function colorset(r, g, b) {
        ledred.pwmWrite(r);
        ledgreen.pwmWrite(g);
        ledblue.pwmWrite(b);
    }

    var color_index = -1;

    setInterval(() => {
    color_index += 1;
    switch (color_index) {
        case 0:
            colorset(0xff, 0x00, 0xFF);
            break;
        case 1:
            colorset(0x00, 0xff, 0x00);
            break;
        case 2:
            colorset(0x00, 0x00, 0xff);
            break;
        case 3:
            colorset(0xff, 0xff, 0x00);
            break;
        case 4:
            colorset(0xff, 0x00, 0xff);
            break;
        case 5:
            colorset(0xc0, 0xff, 0x3e);
            break;
        default:
            color_index=-1;
        }
    }, 500);  

**コード説明**

.. code-block:: js

    const ledred = new Gpio(17,{mode: Gpio.OUTPUT});
    const ledgreen = new Gpio(18,{mode: Gpio.OUTPUT});
    const ledblue = new Gpio(27,{mode: Gpio.OUTPUT});

17、18、27のピンを出力モードに初期化し、それぞれの定数 ``ledred`` 、 ``ledgreen`` 、 ``ledblue`` に割り当てます。

.. code-block:: js

    function colorset(r,g,b){
        ledred.pwmWrite(r);
        ledgreen.pwmWrite(g);
        ledblue.pwmWrite(b);
    }

``colorset(r,g,b)`` 関数を実装します。これは、ピン17、18、27にパルス値を書き込むために使用されます。Gpioライブラリは、ピンに書き込むための関数 ``pwmWrite()`` をカプセル化しています。その値は0x00から0xffまでです。その後、 ``colorset(r,g,b)`` 関数を通じてRGB LEDにRGB値を書き込むことで、様々な色を表示することができます。

.. note::
    RGBに関する質問は、以下のウェブサイトを参照してください： https://www.rapidtables.com/web/color/RGB_Color.html

.. code-block:: js

    var color_index = -1;

    setInterval(() => {
    color_index += 1;
    switch (color_index) {
        case 0:
            colorset(0xff, 0x00, 0xFF);
            break;
        case 1:
            colorset(0x00, 0xff, 0x00);
            break;
        case 2:
            colorset(0x00, 0x00, 0xff);
            break;
        case 3:
            colorset(0xff, 0xff, 0x00);
            break;
        case 4:
            colorset(0xff, 0x00, 0xff);
            break;
        case 5:
            colorset(0xc0, 0xff, 0x3e);
            break;
        default:
            color_index=-1;
        }
    }, 500);  

RGB LEDは、 ``colorset()`` が500msごとに実行されることで制御されます。
ここでは、スイッチケースを使用してRGB LEDが放射する色を選択しています。
``color_index`` は各サイクルで1つずつ変更されるため、この1つのRGB LEDの色は順番に変わります。

現象の画像
------------------------

.. image:: img/image62.jpeg



