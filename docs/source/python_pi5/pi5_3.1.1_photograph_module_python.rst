 
.. note::

    Bonjour et bienvenue dans la Communaut√© Facebook des passionn√©s de Raspberry Pi, Arduino et ESP32 de SunFounder ! Plongez plus profond√©ment dans l'univers des Raspberry Pi, Arduino et ESP32 avec d'autres passionn√©s.

    **Pourquoi rejoindre ?**

    - **Support d'experts** : R√©solvez les probl√®mes apr√®s-vente et les d√©fis techniques avec l'aide de notre communaut√© et de notre √©quipe.
    - **Apprendre et partager** : √âchangez des astuces et des tutoriels pour am√©liorer vos comp√©tences.
    - **Aper√ßus exclusifs** : Acc√©dez en avant-premi√®re aux annonces de nouveaux produits et aux aper√ßus.
    - **R√©ductions sp√©ciales** : Profitez de r√©ductions exclusives sur nos produits les plus r√©cents.
    - **Promotions festives et cadeaux** : Participez √† des cadeaux et des promotions de vacances.

    üëâ Pr√™t √† explorer et √† cr√©er avec nous ? Cliquez [|link_sf_facebook|] et rejoignez-nous aujourd'hui !

.. _3.1.1_py_pi5:

3.1.1 Module Photographique
===============================

Introduction
---------------

Dans ce kit, √©quip√© d'un module cam√©ra, essayons de prendre une photo avec le Raspberry Pi.

Composants n√©cessaires
--------------------------

Dans ce projet, nous avons besoin des composants suivants.

.. image:: ../python_pi5/img/3.3.1_photograph_list.png
  :width: 800

Il est certainement pratique d'acheter un kit complet, voici le lien :

.. list-table::
    :widths: 20 20 20
    :header-rows: 1

    *   - Nom
        - ARTICLES DANS CE KIT
        - LIEN
    *   - Kit Raphael
        - 337
        - |link_Raphael_kit|

Vous pouvez √©galement les acheter s√©par√©ment via les liens ci-dessous.

.. list-table::
    :widths: 30 20
    :header-rows: 1

    *   - INTRODUCTION DU COMPOSANT
        - LIEN D'ACHAT

    *   - :ref:`cpn_camera_module`
        - |link_camera_buy|

Proc√©dures exp√©rimentales
-----------------------------

**√âtape 1 :** Acc√©dez au bureau du Raspberry Pi. Vous aurez peut-√™tre besoin d'un √©cran pour une meilleure exp√©rience, r√©f√©rez-vous √† : `Connecter votre Raspberry Pi <https://projects.raspberrypi.org/en/projects/raspberry-pi-setting-up/3>`_. Ou acc√©dez au bureau du Raspberry Pi √† distance, pour un tutoriel d√©taill√© veuillez consulter :ref:`remote_desktop`.

**√âtape 2 :** Ouvrez un Terminal et acc√©dez au dossier du code.

.. code-block::

    cd ~/raphael-kit/python-pi5

**√âtape 3 :** Ex√©cutez.

.. code-block::

    sudo python3 3.1.1_PhotographModule_zero.py

Lorsque le code s'ex√©cute, la cam√©ra prendra une photo. Vous pouvez maintenant voir la photo nomm√©e ``my_photo.jpg`` dans le r√©pertoire ``~``.

.. note::

    Vous pouvez √©galement ouvrir ``3.1.1_PhotographModule.py`` dans le chemin ``~/raphael-kit/python-pi5/`` avec un IDE Python, cliquer sur le bouton Ex√©cuter pour ex√©cuter et arr√™ter le code avec le bouton Stop.

Si vous souhaitez t√©l√©charger la photo sur votre PC, veuillez vous r√©f√©rer √† :ref:`filezilla`.

.. warning::

    Si vous recevez le message d'erreur ``RuntimeError: Cannot determine SOC peripheral base address``, veuillez consulter :ref:`faq_soc`

**Code**

.. code-block:: python

   #!/usr/bin/env python3    
   from picamera2 import Picamera2, Preview
   import os

   # Get the current user's login name
   user = os.getlogin()
   # Get the path to the user's home directory
   user_home = os.path.expanduser(f'~{user}')

   # Create a Picamera2 instance
   camera = Picamera2()
   # Retrieve the default preview configuration
   preview_config = camera.preview_configuration

   try:
       # Set preview size and format
       preview_config.size = (800, 600)
       preview_config.format = 'XRGB8888'  
       # Start the camera preview in QTGL mode
       camera.start_preview(Preview.QTGL)
       # Start the camera
       camera.start()
       # Capture and save a photo to the user's home directory
       camera.capture_file(f'{user_home}/my_photo.jpg')

   except KeyboardInterrupt:
       # Stop the camera preview if a KeyboardInterrupt (e.g., Ctrl+C) occurs
       camera.stop_preview()
       pass


**Explication du Code**

#. Importe les classes ``Picamera2`` et ``Preview`` de la biblioth√®que picamera2, ainsi que le module ``os`` pour les interactions avec le syst√®me d'exploitation.

   .. code-block:: python

       #!/usr/bin/env python3    
       from picamera2 import Picamera2, Preview
       import os

#. R√©cup√®re le nom d'utilisateur actuel et le chemin de son r√©pertoire personnel.

   .. code-block:: python

       # Get the current user's login name
       user = os.getlogin()
       # Get the path to the user's home directory
       user_home = os.path.expanduser(f'~{user}')

#. Cr√©e une instance de la classe ``Picamera2`` et r√©cup√®re la configuration de pr√©visualisation par d√©faut.

   .. code-block:: python

       # Create a Picamera2 instance
       camera = Picamera2()
       # Retrieve the default preview configuration
       preview_config = camera.preview_configuration

#. D√©finit la taille et le format de la pr√©visualisation de la cam√©ra. La taille est d√©finie √† 800x600 pixels, et le format √† ``XRGB8888``.

   .. code-block:: python

       try:
           # Set preview size and format
           preview_config.size = (800, 600)
           preview_config.format = 'XRGB8888'

           ...

#. D√©marre la pr√©visualisation de la cam√©ra en mode QTGL, puis d√©marre la cam√©ra elle-m√™me.

   .. code-block:: python

       try:
           ...
           
           # Start the camera preview in QTGL mode
           camera.start_preview(Preview.QTGL)
           # Start the camera
           camera.start()

           ...

#. Capture une image √† partir de la cam√©ra et l'enregistre dans le r√©pertoire personnel de l'utilisateur.

   .. code-block:: python

       try:
           ...           
           
           # Capture and save a photo to the user's home directory
           camera.capture_file(f'{user_home}/my_photo.jpg')

   .. note::
       Vous pouvez utiliser la fonction ``camera.capture()`` et une boucle ``for`` ensemble pour r√©aliser une prise de vue en continu. Utilisez la fonction ``delay`` pour ajuster l'intervalle de temps entre les prises de vue.

       .. code-block:: python

           for i in 5:
               camera.capture(f'{user_home}/my_photo%s.jpg' % i)

#. Ce bloc de code g√®re une interruption clavier (comme Ctrl+C) en arr√™tant la pr√©visualisation de la cam√©ra. L'instruction ``pass`` est utilis√©e pour g√©rer l'exception sans faire autre chose.

   .. code-block:: python

       except KeyboardInterrupt:
           # Stop the camera preview if a KeyboardInterrupt (e.g., Ctrl+C) occurs
           camera.stop_preview()
           pass



