.. nota::

    ¬°Hola, bienvenido a la Comunidad de Entusiastas de SunFounder Raspberry Pi & Arduino & ESP32 en Facebook! Sum√©rgete m√°s en Raspberry Pi, Arduino y ESP32 con otros entusiastas.

    **¬øPor qu√© unirse?**

    - **Soporte Experto**: Resuelve problemas postventa y desaf√≠os t√©cnicos con la ayuda de nuestra comunidad y equipo.
    - **Aprender y Compartir**: Intercambia consejos y tutoriales para mejorar tus habilidades.
    - **Previsualizaciones Exclusivas**: Obt√©n acceso anticipado a nuevos anuncios de productos y avances.
    - **Descuentos Especiales**: Disfruta de descuentos exclusivos en nuestros productos m√°s recientes.
    - **Promociones Festivas y Sorteos**: Participa en sorteos y promociones de temporada.

    üëâ ¬øListo para explorar y crear con nosotros? Haz clic en [|link_sf_facebook|] y √∫nete hoy mismo!

.. _1.1.7_py_pi5:

1.1.6 I2C LCD1602
========================

Introducci√≥n
---------------------

LCD1602 es una pantalla de cristal l√≠quido de tipo car√°cter, que puede mostrar 
32 (16*2) caracteres al mismo tiempo.

Componentes Necesarios
---------------------------------

En este proyecto, necesitamos los siguientes componentes.

.. image:: ../python_pi5/img/1.1.7_i2c_lcd_list.png

Es definitivamente conveniente comprar un kit completo, aqu√≠ est√° el enlace:

.. list-table::
    :widths: 20 20 20
    :header-rows: 1

    *   - Nombre
        - ART√çCULOS EN ESTE KIT
        - ENLACE
    *   - Kit Raphael
        - 337
        - |link_Raphael_kit|

Tambi√©n puedes comprarlos por separado en los siguientes enlaces.

.. list-table::
    :widths: 30 20
    :header-rows: 1

    *   - INTRODUCCI√ìN DE COMPONENTES
        - ENLACE DE COMPRA

    *   - :ref:`cpn_gpio_extension_board`
        - |link_gpio_board_buy|
    *   - :ref:`cpn_breadboard`
        - |link_breadboard_buy|
    *   - :ref:`cpn_wires`
        - |link_wires_buy|
    *   - :ref:`cpn_i2c_lcd`
        - |link_i2clcd1602_buy|

Diagrama Esquem√°tico
---------------------

============== ========
T-Board Nombre f√≠sica
SDA1           Pin 3
SCL1           Pin 5
============== ========

.. image:: ../python_pi5/img/1.1.7_i2c_lcd_schematic.png


Procedimientos Experimentales
---------------------------------

**Paso 1:** Montar el circuito.

.. image:: ../python_pi5/img/1.1.7_i2c_lcd1602_circuit.png

**Paso 2:** Configurar I2C (ver :ref:`i2c_config`. Si ya has configurado I2C, omite este paso.)

**Paso 3:** Cambiar de directorio.

.. raw:: html

   <run></run>

.. code-block::

    cd ~/raphael-kit/python-pi5

**Paso 4:** Ejecutar.

.. raw:: html

   <run></run>

.. code-block::

    sudo python3 1.1.7_Lcd1602_zero.py

Despu√©s de ejecutar el c√≥digo, podr√°s ver ``Greetings!, From SunFounder`` en la pantalla LCD.

.. nota::

    * Si obtienes el error ``FileNotFoundError: [Errno 2] No such file or directory: '/dev/i2c-1'``, necesitas consultar :ref:`i2c_config` para habilitar el I2C.
    * Si obtienes el error ``ModuleNotFoundError: No module named 'smbus2'``, por favor ejecuta ``sudo pip3 install smbus2``.
    * Si aparece el error ``OSError: [Errno 121] Remote I/O error``, significa que el m√≥dulo est√° mal conectado o est√° da√±ado.
    * Si el c√≥digo y el cableado est√°n bien, pero la pantalla LCD a√∫n no muestra contenido, puedes girar el potenci√≥metro en la parte posterior para aumentar el contraste.


.. warning::

    Si recibe el mensaje de error ``RuntimeError: Cannot determine SOC peripheral base address``, consulte :ref:`faq_soc`

**C√≥digo**

.. nota::

    Puedes **Modificar/Restablecer/Copiar/Ejecutar/Detener** el c√≥digo a continuaci√≥n. Pero antes de eso, necesitas ir a la ruta del c√≥digo fuente como ``raphael-kit/python-pi5``. Despu√©s de modificar el c√≥digo, puedes ejecutarlo directamente para ver el efecto.

.. raw:: html

    <run></run>

.. code-block:: python

   #!/usr/bin/env python3
   import LCD1602  # Import module for interfacing with LCD1602
   import time     # Import module for timing functions

   def setup():
       # Initialize LCD with I2C address 0x27 and enable backlight
       LCD1602.init(0x27, 1) 
       # Display the message 'Greetings!' at the top-left corner (row 0, column 0)
       LCD1602.write(0, 0, 'Greetings!') 
       # Display the message 'From SunFounder' on the second line (row 1, column 1)
       LCD1602.write(1, 1, 'From SunFounder') 
       time.sleep(2)  # Display messages for 2 seconds

   try:
       setup()  # Run the setup function to initialize the LCD and display messages
       
   except KeyboardInterrupt:
       # Clear the LCD display if a keyboard interruption (e.g., Ctrl+C) occurs
       LCD1602.clear()
       pass  # Proceed with no further action


**Explicaci√≥n del C√≥digo**

1. Este archivo es un archivo de c√≥digo abierto para controlar el I2C LCD1602. Nos permite usar f√°cilmente el I2C LCD1602.

   .. code-block:: python

       import LCD1602  # Import module for interfacing with LCD1602

2. La funci√≥n inicializa el sistema I2C con el s√≠mbolo del dispositivo designado. El primer par√°metro es la direcci√≥n del dispositivo I2C, que se puede detectar a trav√©s del comando i2cdetect (ver Ap√©ndice para m√°s detalles). La direcci√≥n del I2C LCD1602 generalmente es 0x27.

   .. code-block:: python

       # Initialize LCD with I2C address 0x27 and enable backlight
       LCD1602.init(0x27, 1) 

3. ``LCD1602.write`` se usa para mostrar mensajes en la LCD. Los primeros dos par√°metros son posiciones de fila y columna, y el tercero es el mensaje. Ahora puedes ver "Greetings! From SunFounder" mostrado en la LCD.

   .. code-block:: python

       # Display the message 'Greetings!' at the top-left corner (row 0, column 0)
       LCD1602.write(0, 0, 'Greetings!') 
       # Display the message 'From SunFounder' on the second line (row 1, column 1)
       LCD1602.write(1, 1, 'From SunFounder') 

