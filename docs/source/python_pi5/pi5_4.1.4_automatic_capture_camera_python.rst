.. note::

    Bonjour et bienvenue dans la Communaut√© Facebook des passionn√©s de Raspberry Pi, Arduino et ESP32 de SunFounder ! Plongez plus profond√©ment dans l'univers des Raspberry Pi, Arduino et ESP32 avec d'autres passionn√©s.

    **Pourquoi rejoindre ?**

    - **Support d'experts** : R√©solvez les probl√®mes apr√®s-vente et les d√©fis techniques avec l'aide de notre communaut√© et de notre √©quipe.
    - **Apprendre et partager** : √âchangez des astuces et des tutoriels pour am√©liorer vos comp√©tences.
    - **Aper√ßus exclusifs** : Acc√©dez en avant-premi√®re aux annonces de nouveaux produits et aux aper√ßus.
    - **R√©ductions sp√©ciales** : Profitez de r√©ductions exclusives sur nos produits les plus r√©cents.
    - **Promotions festives et cadeaux** : Participez √† des cadeaux et des promotions de vacances.

    üëâ Pr√™t √† explorer et √† cr√©er avec nous ? Cliquez [|link_sf_facebook|] et rejoignez-nous aujourd'hui !

.. _4.1.4_py_pi5:

4.1.2 Cam√©ra √† Capture Automatique
=====================================

Introduction
---------------

Lorsque vous √™tes absent, les petits √©cureuils de la for√™t pourraient visiter votre rebord de fen√™tre. Fabriquons une cam√©ra √† capture automatique pour garder des photos de ces petites cr√©atures adorables !

Composants N√©cessaires
--------------------------

Pour ce projet, nous avons besoin des composants suivants.

.. image:: ../python_pi5/img/4.1.4_automatic_capture_list.png
  :width: 800
  :align: center

Il est vraiment pratique d'acheter un kit complet, voici le lien :

.. list-table::
    :widths: 20 20 20
    :header-rows: 1

    *   - Nom
        - √âl√©ments dans ce kit
        - Lien
    *   - Kit Raphael
        - 337
        - |link_Raphael_kit|

Vous pouvez √©galement les acheter s√©par√©ment √† partir des liens ci-dessous.

.. list-table::
    :widths: 30 20
    :header-rows: 1

    *   - Introduction des Composants
        - Lien d'Achat

    *   - :ref:`cpn_gpio_extension_board`
        - |link_gpio_board_buy|
    *   - :ref:`cpn_breadboard`
        - |link_breadboard_buy|
    *   - :ref:`cpn_wires`
        - |link_wires_buy|
    *   - :ref:`cpn_resistor`
        - |link_resistor_buy|
    *   - :ref:`cpn_camera_module`
        - |link_camera_buy|
    *   - :ref:`cpn_pir`
        - \-


Sch√©ma de C√¢blage
---------------------

============ ========= ========= ====
Nom T-Board   Physique wiringPi  BCM
GPIO17        Pin 11   0         17
============ ========= ========= ====

.. image:: ../python_pi5/img/4.1.4_automatic_capture_schematic.png
   :width: 400
   :align: center

Proc√©dures Exp√©rimentales
------------------------------

Avant de commencer ce projet, assurez-vous d'avoir compl√©t√© :ref:`3.1.1_py_pi5`.

**√âtape 1 :** Construisez le circuit.

.. image:: ../python_pi5/img/4.1.4_automatic_capture_circuit.png
  :width: 800
  :align: center

**√âtape 2 :** Allez sur le bureau de Raspberry Pi. Vous aurez peut-√™tre besoin d'un √©cran pour une meilleure exp√©rience, r√©f√©rez-vous √† : `Connect your Raspberry Pi <https://projects.raspberrypi.org/en/projects/raspberry-pi-setting-up/3>`_. Ou acc√©dez au bureau de Raspberry Pi √† distance, pour un tutoriel d√©taill√©, veuillez vous r√©f√©rer √† :ref:`remote_desktop`.

**√âtape 3 :** Ouvrez un terminal et acc√©dez au dossier du code.

.. raw:: html

   <run></run>

.. code-block::

    cd ~/raphael-kit/python-pi5

**√âtape 4 :** Ex√©cutez.

.. raw:: html

   <run></run>

.. code-block::

    sudo python3 4.1.4_AutomaticCaptureCamera_zero.py

Apr√®s l'ex√©cution du code, le PIR d√©tectera l'environnement environnant, et s'il d√©tecte le passage du petit √©cureuil, la cam√©ra prendra une photo.
L'intervalle entre les photos est de 3 secondes, et le nombre total de photos prises sera affich√© dans la fen√™tre de terminal.

Il y a deux potentiom√®tres sur le module PIR : l'un pour ajuster la sensibilit√© et l'autre pour ajuster la distance de d√©tection. Pour que le module PIR fonctionne mieux, vous devez tourner les deux dans le sens inverse des aiguilles d'une montre jusqu'√† la fin.

.. image:: ../python_pi5/img/4.1.4_PIR_TTE.png
    :width: 400
    :align: center

.. note::

   Vous pouvez √©galement ouvrir ``4.1.4_AutomaticCaptureCamera_zero.py`` dans le chemin ``~/raphael-kit/python-pi5/`` avec un IDE Python, cliquer sur le bouton Ex√©cuter pour l'ex√©cuter, et arr√™ter le code avec le bouton Arr√™ter.


.. warning::

    Si vous recevez le message d'erreur ``RuntimeError: Cannot determine SOC peripheral base address``, veuillez consulter :ref:`faq_soc`

**Code**

.. note::
    Vous pouvez **Modifier/R√©initialiser/Copier/Ex√©cuter/Arr√™ter** le code ci-dessous. Mais avant cela, vous devez aller dans le chemin du code source comme ``raphael-kit/python-pi5``. Apr√®s avoir modifi√© le code, vous pouvez l'ex√©cuter directement pour voir l'effet.

.. raw:: html

    <run></run>

.. code-block:: python

    #!/usr/bin/env python3  
    from picamera2 import Picamera2, Preview
    from gpiozero import MotionSensor
    import time
    import os

    # Retrieve the current user's login name and home directory
    user = os.getlogin()
    user_home = os.path.expanduser(f'~{user}')

    # Initialize the camera
    camera = Picamera2()
    camera.start()

    # Initialize the motion sensor on GPIO pin 17
    pir = MotionSensor(17)

    try:
        i = 1  # Initialize the image count
        while True:
            if pir.motion_detected:
                # Capture an image when motion is detected and save it with a unique number
                camera.capture_file(f'{user_home}/capture%s.jpg' % i)
                print('The number is %s' % i)  # Print the image count
                time.sleep(3)  # Wait for 3 seconds before next detection
                i += 1  # Increment the image count
            else:
                print('waiting')  # Print 'waiting' when no motion is detected
                time.sleep(0.5)  # Check for motion every 0.5 seconds

    except KeyboardInterrupt:
        # Stop the camera and turn off the LED if a KeyboardInterrupt occurs
        camera.stop_preview()
        pass


**Explication du Code**

#. Importe les classes ``Picamera2`` et ``Preview`` pour le contr√¥le de la cam√©ra, la classe ``MotionSensor`` pour la d√©tection de mouvement, ainsi que les biblioth√®ques standards ``time`` et ``os`` pour la gestion du temps et les interactions avec le syst√®me d'exploitation.

   .. code-block:: python

       #!/usr/bin/env python3  
       from picamera2 import Picamera2, Preview
       from gpiozero import MotionSensor
       import time
       import os

#. R√©cup√®re le nom de connexion et le r√©pertoire personnel de l'utilisateur actuel pour enregistrer les images captur√©es.

   .. code-block:: python

       # Retrieve the current user's login name and home directory
       user = os.getlogin()
       user_home = os.path.expanduser(f'~{user}')

#. Initialise la cam√©ra et la d√©marre.

   .. code-block:: python

       # Initialize the camera
       camera = Picamera2()
       camera.start()

#. Initialise un capteur de mouvement PIR connect√© √† la broche GPIO 17.

   .. code-block:: python

       # Initialize the motion sensor on GPIO pin 17
       pir = MotionSensor(17)

#. Initialise un compteur ``i`` pour suivre le nombre d'images captur√©es. Dans une boucle infinie, v√©rifie si un mouvement est d√©tect√©. Si un mouvement est d√©tect√©, capture une image, la sauvegarde avec un nom unique bas√© sur le compteur ``i``, affiche le num√©ro de l'image, et attend 3 secondes avant de v√©rifier √† nouveau la d√©tection de mouvement. Le compteur ``i`` est incr√©ment√© apr√®s chaque capture.

   .. code-block:: python

       try:
           i = 1  # Initialize the image count
           while True:
               if pir.motion_detected:
                   # Capture an image when motion is detected and save it with a unique number
                   camera.capture_file(f'{user_home}/capture%s.jpg' % i)
                   print('The number is %s' % i)  # Print the image count
                   time.sleep(3)  # Wait for 3 seconds before next detection
                   i += 1  # Increment the image count

#. Si aucun mouvement n'est d√©tect√©, affiche ``waiting`` et v√©rifie la d√©tection de mouvement toutes les 0,5 secondes.

   .. code-block:: python

       try:
           ...

           while True:           
               ...
               
               else:
                   print('waiting')  # Print 'waiting' when no motion is detected
                   time.sleep(0.5)  # Check for motion every 0.5 seconds

#. Intercepte une interruption clavier (comme Ctrl+C) pour arr√™ter l'aper√ßu de la cam√©ra et quitter le script de mani√®re gracieuse.

   .. code-block:: python

       except KeyboardInterrupt:
           # Stop the camera and turn off the LED if a KeyboardInterrupt occurs
           camera.stop_preview()
           pass

