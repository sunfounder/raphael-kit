 
.. note::

    Bonjour et bienvenue dans la Communaut√© Facebook des passionn√©s de Raspberry Pi, Arduino et ESP32 de SunFounder ! Plongez plus profond√©ment dans l'univers des Raspberry Pi, Arduino et ESP32 avec d'autres passionn√©s.

    **Pourquoi rejoindre ?**

    - **Support d'experts** : R√©solvez les probl√®mes apr√®s-vente et les d√©fis techniques avec l'aide de notre communaut√© et de notre √©quipe.
    - **Apprendre et partager** : √âchangez des astuces et des tutoriels pour am√©liorer vos comp√©tences.
    - **Aper√ßus exclusifs** : Acc√©dez en avant-premi√®re aux annonces de nouveaux produits et aux aper√ßus.
    - **R√©ductions sp√©ciales** : Profitez de r√©ductions exclusives sur nos produits les plus r√©cents.
    - **Promotions festives et cadeaux** : Participez √† des cadeaux et des promotions de vacances.

    üëâ Pr√™t √† explorer et √† cr√©er avec nous ? Cliquez [|link_sf_facebook|] et rejoignez-nous aujourd'hui !

.. _2.2.8_py_pi5:

2.2.8 Module de capteur ultrasonique
=======================================

Introduction
--------------

Le capteur ultrasonique utilise des ultrasons pour d√©tecter avec pr√©cision des objets et mesurer des distances. Il √©met des ondes ultrasonores et les convertit en signaux √©lectroniques.

Composants n√©cessaires
-------------------------

Dans ce projet, nous avons besoin des composants suivants.

.. image:: ../python_pi5/img/2.2.8_ultrasonic_list.png

Il est certainement pratique d'acheter un kit complet, voici le lien :

.. list-table::
    :widths: 20 20 20
    :header-rows: 1

    *   - Nom	
        - ARTICLES DANS CE KIT
        - LIEN
    *   - Kit Raphael
        - 337
        - |link_Raphael_kit|

Vous pouvez √©galement les acheter s√©par√©ment via les liens ci-dessous.

.. list-table::
    :widths: 30 20
    :header-rows: 1

    *   - INTRODUCTION DU COMPOSANT
        - LIEN D'ACHAT

    *   - :ref:`cpn_gpio_extension_board`
        - |link_gpio_board_buy|
    *   - :ref:`cpn_breadboard`
        - |link_breadboard_buy|
    *   - :ref:`cpn_wires`
        - |link_wires_buy|
    *   - :ref:`cpn_ultrasonic_sensor`
        - |link_ultrasonic_buy|

Sch√©ma
---------

.. image:: ../python_pi5/img/2.2.8_ultrasonic_schematic.png


Proc√©dures exp√©rimentales
-----------------------------

**√âtape 1 :** Construisez le circuit.

.. image:: ../python_pi5/img/2.2.8_ultrasonic_circuit.png

**√âtape 2 :** Allez dans le dossier du code.

.. raw:: html

   <run></run>

.. code-block::

    cd ~/raphael-kit/python-pi5

**√âtape 3 :** Ex√©cutez le fichier ex√©cutable.

.. raw:: html

   <run></run>

.. code-block::

    sudo python3 2.2.8_Ultrasonic_zero.py

Lorsque le code est ex√©cut√©, le module de capteur ultrasonique d√©tecte la 
distance entre l'obstacle devant et le module lui-m√™me, puis la valeur de 
la distance sera imprim√©e √† l'√©cran.

.. warning::

    Si vous recevez le message d'erreur ``RuntimeError: Cannot determine SOC peripheral base address``, veuillez consulter :ref:`faq_soc`

**Code**

.. note::

    Vous pouvez **Modifier/R√©initialiser/Copier/Ex√©cuter/Arr√™ter** le code ci-dessous. Mais avant cela, vous devez vous rendre au chemin du code source comme ``raphael-kit/python-pi5``. Apr√®s avoir modifi√© le code, vous pouvez l'ex√©cuter directement pour voir l'effet.


.. raw:: html

    <run></run>

.. code-block:: python

   #!/usr/bin/env python3
   from gpiozero import DistanceSensor
   from time import sleep

   # Initialize the DistanceSensor using GPIO Zero library
   # Trigger pin is connected to GPIO 23, Echo pin to GPIO 24
   sensor = DistanceSensor(echo=24, trigger=23)

   try:
       # Main loop to continuously measure and report distance
       while True:
           dis = sensor.distance * 100  # Measure distance and convert from meters to centimeters
           print('Distance: {:.2f} cm'.format(dis))  # Print the distance with two decimal precision
           sleep(0.3)  # Wait for 0.3 seconds before the next measurement

   except KeyboardInterrupt:
       # Handle KeyboardInterrupt (Ctrl+C) to gracefully exit the loop
       pass


**Explication du code**

#. Importe la classe ``DistanceSensor`` de la biblioth√®que ``gpiozero`` pour la mesure de distance, et la fonction ``sleep`` du module ``time`` pour les d√©lais.

   .. code-block:: python

       #!/usr/bin/env python3
       from gpiozero import DistanceSensor
       from time import sleep

#. Initialise le capteur de distance ultrasonique avec la broche Echo connect√©e √† GPIO 24 et la broche Trigger √† GPIO 23.

   .. code-block:: python

       # Initialize the DistanceSensor using GPIO Zero library
       # Trigger pin is connected to GPIO 23, Echo pin to GPIO 24
       sensor = DistanceSensor(echo=24, trigger=23)

#. La boucle principale mesure continuellement la distance, la convertit de m√®tres en centim√®tres et l'imprime avec une pr√©cision de deux d√©cimales. Puis attend 0,3 secondes avant de refaire une mesure. G√®re un KeyboardInterrupt (comme Ctrl+C) pour permettre une sortie propre du script.

   .. code-block:: python

       try:
           # Main loop to continuously measure and report distance
           while True:
               dis = sensor.distance * 100  # Measure distance and convert from meters to centimeters
               print('Distance: {:.2f} cm'.format(dis))  # Print the distance with two decimal precision
               sleep(0.3)  # Wait for 0.3 seconds before the next measurement

       except KeyboardInterrupt:
           # Handle KeyboardInterrupt (Ctrl+C) to gracefully exit the loop
           pass

