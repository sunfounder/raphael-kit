.. note::

    Ciao, benvenuto nella community di SunFounder Raspberry Pi & Arduino & ESP32 su Facebook! Approfondisci le tue conoscenze su Raspberry Pi, Arduino ed ESP32 insieme ad altri appassionati.

    **Perch√© unirti a noi?**

    - **Supporto Esperto**: Risolvi problemi post-vendita e sfide tecniche con l'aiuto della nostra comunit√† e del nostro team.
    - **Impara e Condividi**: Scambia suggerimenti e tutorial per migliorare le tue competenze.
    - **Anteprime Esclusive**: Ottieni accesso anticipato a nuovi annunci di prodotti e anteprime.
    - **Sconti Speciali**: Approfitta di sconti esclusivi sui nostri prodotti pi√π recenti.
    - **Promozioni Festive e Giveaway**: Partecipa a concorsi e promozioni festive.

    üëâ Pronto a esplorare e creare con noi? Clicca su [|link_sf_facebook|] e unisciti subito!

.. _2.1.2_c:

2.1.2 Micro Interruttore
===========================

Introduzione
-----------------------

In questo progetto, impareremo come utilizzare un Micro Interruttore. Un Micro Interruttore √® un piccolo e molto sensibile interruttore che richiede una compressione minima per attivarsi. Poich√© sono affidabili e sensibili, i micro interruttori vengono spesso utilizzati come dispositivi di sicurezza.

Sono usati per impedire la chiusura di porte se qualcosa o qualcuno √® in mezzo e in altre applicazioni simili.

Componenti Necessari
------------------------------

In questo progetto, abbiamo bisogno dei seguenti componenti.

.. image:: ../img/2.1.2component.png


√à sicuramente conveniente acquistare un kit completo, ecco il link: 

.. list-table::
    :widths: 20 20 20
    :header-rows: 1

    *   - Nome	
        - COMPONENTI NEL KIT
        - LINK
    *   - Raphael Kit
        - 337
        - |link_Raphael_kit|

Puoi anche acquistarli separatamente dai link seguenti.

.. list-table::
    :widths: 30 20
    :header-rows: 1

    *   - INTRODUZIONE AI COMPONENTI
        - LINK PER L'ACQUISTO

    *   - :ref:`cpn_gpio_extension_board`
        - |link_gpio_board_buy|
    *   - :ref:`cpn_breadboard`
        - |link_breadboard_buy|
    *   - :ref:`cpn_wires`
        - |link_wires_buy|
    *   - :ref:`cpn_resistor`
        - |link_resistor_buy|
    *   - :ref:`cpn_led`
        - |link_led_buy|
    *   - :ref:`cpn_micro_switch`
        - \-
    *   - :ref:`cpn_capacitor`
        - |link_capacitor_buy|

Schema Elettrico
---------------------

Collega il pin sinistro del Micro Interruttore al GPIO17 e due LED rispettivamente 
ai pin GPIO22 e GPIO27. Quindi, quando premi e rilasci il braccio mobile del Micro 
Interruttore, puoi vedere i due LED accendersi alternativamente.

.. image:: ../img/image305.png


.. image:: ../img/micro_Schematic.png


Procedure Sperimentali
---------------------------

**Passo 1:** Costruisci il circuito.

.. image:: ../img/2.1.4fritzing.png

**Passo 2**: Vai alla cartella del codice.

.. raw:: html

   <run></run>

.. code-block::

    cd ~/raphael-kit/c/2.1.2

**Passo 3**: Compila.

.. raw:: html

   <run></run>

.. code-block::

    gcc 2.1.2_MicroSwitch.c -lwiringPi 

**Passo 4**: Esegui il file eseguibile.

.. raw:: html

   <run></run>

.. code-block::

    sudo ./a.out

Mentre il codice √® in esecuzione, premi il Micro Interruttore e il LED giallo si accender√†; rilascia il braccio mobile, e il LED rosso si accender√†.

.. note::

    Se non funziona dopo l'esecuzione o viene visualizzato un errore come: \"wiringPi.h: No such file or directory\", fai riferimento a :ref:`install_wiringpi`.

**Codice**

.. code-block:: c

    #include <wiringPi.h>
    #include <stdio.h>

    #define microPin		0
    #define led1			3
    #define led2 			2

    int main(void)
    {
        // Se l'inizializzazione di wiring fallisce, stampa il messaggio a schermo
        if(wiringPiSetup() == -1){
            printf("setup wiringPi failed !");
            return 1; 
        }
        
        pinMode(microPin, INPUT);
        pinMode(led1, OUTPUT);
        pinMode(led2, OUTPUT);
        
        while(1){
            // micro interruttore alto, led1 acceso
            if(digitalRead(microPin) == 1){
                digitalWrite(led1, LOW);
                digitalWrite(led2, HIGH);
                printf("LED1 on\n");
            }
            // micro interruttore basso, led2 acceso
            if(digitalRead(microPin) == 0){
                digitalWrite(led2, LOW);
                digitalWrite(led1, HIGH);
                printf(".....LED2 on\n");
            }
            delay(500);
        }

        return 0;
    }

**Spiegazione del Codice**

.. code-block:: c

    if(digitalRead(slidePin) == 1){
                digitalWrite(led1, LOW);
                digitalWrite(led2, HIGH);
                printf("LED1 on\n");
        }

Quando il braccio mobile del micro interruttore √® rilasciato, il pin sinistro √® collegato al pin destro; in questo momento verr√† letto un livello alto su GPIO17, quindi LED1 si accender√† e LED2 si spegner√†.


.. code-block:: c

    if(digitalRead(slidePin) == 0){
                digitalWrite(led2, LOW);
                digitalWrite(led1, HIGH);
                printf(".....LED2 on\n");
            }

Quando il braccio mobile √® premuto, il pin sinistro e il pin centrale sono collegati. A questo punto verr√† letto un livello basso su GPIO17, quindi LED2 si accender√† e LED1 si spegner√†.


Immagine del Fenomeno
-----------------------------

.. image:: ../img/2.1.2micro_switch.JPG

