.. note::

    Ciao, benvenuto nella SunFounder Raspberry Pi & Arduino & ESP32 Enthusiasts Community su Facebook! Approfondisci Raspberry Pi, Arduino ed ESP32 insieme ad altri appassionati.

    **Perch√© unirti?**

    - **Supporto esperto**: Risolvi i problemi post-vendita e le sfide tecniche con l'aiuto della nostra community e del nostro team.
    - **Impara e condividi**: Scambia suggerimenti e tutorial per migliorare le tue competenze.
    - **Anteprime esclusive**: Ottieni accesso anticipato agli annunci di nuovi prodotti e alle anteprime.
    - **Sconti speciali**: Goditi sconti esclusivi sui nostri prodotti pi√π recenti.
    - **Promozioni festive e omaggi**: Partecipa a concorsi e promozioni festive.

    üëâ Pronto a esplorare e creare con noi? Clicca su [|link_sf_facebook|] e unisciti oggi!

.. _3.1.13_c_pi5:

3.1.13 GIOCO - NotNot
==============================

Introduzione
-------------------

In questo progetto, realizzeremo un dispositivo di gioco interessante, che chiameremo ‚ÄúNot Not‚Äù.

Durante il gioco, la matrice a punti aggiorner√† casualmente una freccia. Il tuo compito √® premere il pulsante nella direzione opposta alla freccia entro un tempo limitato. Se il tempo scade, o se viene premuto il pulsante nella stessa direzione della freccia, sei fuori.

Questo gioco pu√≤ davvero esercitare il tuo pensiero inverso, e ora facciamo un tentativo?

Componenti necessari
------------------------------

In questo progetto, abbiamo bisogno dei seguenti componenti.

.. image:: ../img/list_GAME_14_NotNot.png
    :align: center

√à sicuramente conveniente acquistare un kit completo, ecco il link:

.. list-table::
    :widths: 20 20 20
    :header-rows: 1

    *   - Nome	
        - ELEMENTI IN QUESTO KIT
        - LINK
    *   - Kit Raphael
        - 337
        - |link_Raphael_kit|

Puoi anche acquistarli separatamente dai link sottostanti.

.. list-table::
    :widths: 30 20
    :header-rows: 1

    *   - INTRODUZIONE COMPONENTE
        - LINK PER L'ACQUISTO

    *   - :ref:`cpn_gpio_extension_board`
        - |link_gpio_board_buy|
    *   - :ref:`cpn_breadboard`
        - |link_breadboard_buy|
    *   - :ref:`cpn_wires`
        - |link_wires_buy|
    *   - :ref:`cpn_dot_matrix`
        - |link_led_matrix_buy|
    *   - :ref:`cpn_button`
        - |link_button_buy|

Schema elettrico
------------------------

============ ======== ======== ====
T-Board Name physical wiringPi BCM
GPIO22       Pin 15   3        22
GPIO23       Pin 16   4        23
SPIMOSI      Pin 19   12       MOSI
SPICE0       pin 24   10       CE0
SPISCLK      Pin 23   14       SCLK
============ ======== ======== ====

.. image:: ../img/Schematic_notnot.png
   :align: center

Procedure sperimentali
---------------------------------

**Passo 1**: Costruisci il circuito.

.. image:: ../img/3.1.14game_notnot.png

.. note::

    Accendi l'SPI prima di iniziare l'esperimento, consulta :ref:`spi_configuration` per i dettagli.  
    E sar√† necessaria anche la libreria :ref:`BCM2835`.

**Passo 2**: Vai nella cartella del codice.

.. raw:: html

   <run></run>

.. code-block:: 

    cd ~/raphael-kit/c/3.1.13/

**Passo 3**: Compila il codice.

.. raw:: html

   <run></run>

.. code-block:: 

    make

**Passo 4**: Esegui il file eseguibile.

.. raw:: html

   <run></run>

.. code-block:: 

    sudo ./3.1.13_GAME_NotNot

Dopo l'avvio del programma, una freccia verso sinistra o destra verr√† 
aggiornata casualmente sulla matrice a punti. Il tuo compito √® premere 
il pulsante nella direzione opposta alla freccia; allora apparir√† un ‚Äú‚àö‚Äù 
sulla matrice a punti. Se premi il pulsante nella stessa direzione della 
freccia, sei fuori e la matrice a punti mostrer√† una ‚Äúx‚Äù. Puoi anche 
aggiungere 2 nuovi pulsanti o sostituirli con i tasti del joystick per 4 
direzioni‚Äîsu, gi√π, sinistra e destra‚Äîper aumentare la difficolt√† del gioco.

.. note::

    Se non funziona dopo l'esecuzione, o appare un messaggio di errore: \"wiringPi.h: No such file or directory\", consulta :ref:`install_wiringpi`.

Spiegazione del codice
----------------------

Basato su :ref:`1.1.6_c_pi5`, questo progetto aggiunge 2 pulsanti per creare un dispositivo di gioco divertente.

Il processo completo del programma √® il seguente:

#. Utilizza il tempo di sistema per generare un 0 o 1 casuale.
#. Visualizza casualmente un pattern di freccia sinistra o destra.
#. Premi il pulsante e determina il risultato.
#. Mostra il pattern corretto o sbagliato.

.. image:: ../img/3.1.14_notnot1.png

.. code-block:: c

    int get_index()
    {
        srand((unsigned)time(NULL));
        return rand()%2;
    }

Il seed del sistema viene modificato dal tempo di sistema, ossia ``srand((unsigned)time(NULL))``, cos√¨ che ogni volta che la funzione rand viene chiamata, il valore ottenuto √® completamente casuale. Infine, il risultato ottenuto viene diviso per 2, in modo che i valori ottenuti siano 0 e 1.


.. code-block:: c

    int get_key(uint num)
    {
        while (1)
        {
            if (1 == bcm2835_gpio_lev(AButtonPin) && num == 0){
                return 1;
            }
            else if (1 == bcm2835_gpio_lev(BButtonPin) && num == 1){
                return 1;
            }
            else if (1 == bcm2835_gpio_lev(AButtonPin) && num == 1){
                return 0;
            }
            else if (1 == bcm2835_gpio_lev(BButtonPin) && num == 0){
                return 0;
            }
        }
    }

Determina quale pulsante √® stato premuto e lo confronta con la direzione 
della freccia sulla matrice a punti, quindi restituisce il risultato finale di 0 o 1.

.. image:: ../img/3.1.14_getkey.png

.. code-block:: c

    void display(uint index){
        uchar i;
        if (stage == 0){
            for(i=1;i<9;i++)
            {
                Write_Max7219(i,arrow[index][i-1]);
            }
        }
        else if(stage == 1){
            for(i=1;i<9;i++)
            {
                Write_Max7219(i,check[index][i-1]);
            }
        }
    }

A seconda del valore di ``stage`` e ``index``, visualizza la freccia ``sinistra o destra`` o il pattern ``corretto o sbagliato``.

.. image:: ../img/3.1.14_display.png
