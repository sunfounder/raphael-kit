.. note::

    こんにちは、SunFounderのRaspberry Pi & Arduino & ESP32愛好家コミュニティへようこそ！Facebook上でRaspberry Pi、Arduino、ESP32についてもっと深く掘り下げ、他の愛好家と交流しましょう。

    **参加する理由は？**

    - **エキスパートサポート**：コミュニティやチームの助けを借りて、販売後の問題や技術的な課題を解決します。
    - **学び＆共有**：ヒントやチュートリアルを交換してスキルを向上させましょう。
    - **独占的なプレビュー**：新製品の発表や先行プレビューに早期アクセスしましょう。
    - **特別割引**：最新製品の独占割引をお楽しみください。
    - **祭りのプロモーションとギフト**：ギフトや祝日のプロモーションに参加しましょう。

    👉 私たちと一緒に探索し、創造する準備はできていますか？[|link_sf_facebook|]をクリックして今すぐ参加しましょう！

.. _2.2.6_c_pi5:

2.2.6 速度センサーモジュール
===============================

はじめに
------------------

このプロジェクトでは、速度センサーモジュールの使用方法を学びます。速度センサーモジュールは、モーターのような回転するオブジェクトの速度を測定するためのタコメータの一種です。

必要な部品
------------------------------

このプロジェクトでは、以下のコンポーネントが必要です。

.. image:: ../img/2.2.6component.png
    :width: 700
    :align: center

全てを含むキットを購入するのが便利です。リンクは以下です：

.. list-table::
    :widths: 20 20 20
    :header-rows: 1

    *   - 名前
        - このキットのアイテム
        - リンク
    *   - Raphael Kit
        - 337
        - |link_Raphael_kit|

以下のリンクから個別に購入することもできます。

.. list-table::
    :widths: 30 20
    :header-rows: 1

    *   - コンポーネントの紹介
        - 購入リンク

    *   - :ref:`cpn_gpio_board`
        - |link_gpio_board_buy|
    *   - :ref:`cpn_breadboard`
        - |link_breadboard_buy|
    *   - :ref:`cpn_wires`
        - |link_wires_buy|
    *   - :ref:`cpn_resistor`
        - |link_resistor_buy|
    *   - :ref:`cpn_led`
        - |link_led_buy|
    *   - :ref:`cpn_speed_sensor`
        - \-

回路図
-----------------------

.. image:: ../img/2.2.6circuit.png
    :width: 400
    :align: center

実験手順
------------------------------

**ステップ1:** 回路を組み立てます。

.. image:: ../img/2.2.6fritzing.png
    :width: 700
    :align: center

**ステップ2:** ディレクトリを変更します。

.. raw:: html

   <run></run>

.. code-block::
    
    cd ~/raphael-kit/c/2.2.6/

**ステップ3:** コンパイルします。

.. raw:: html

   <run></run>

.. code-block::

    gcc 2.2.6_speed_sensor_module.c -lwiringPi

**ステップ4:** 実行します。

.. raw:: html

   <run></run>

.. code-block::

    sudo ./a.out

コードを実行すると、緑のLEDが点灯します。速度センサーモジュールの隙間に障害物を置くと、画面に"light blocked"と表示され、赤いLEDが点灯します。
障害物を取り除くと、緑のLEDが再び点灯します。

.. note::

    実行後に動作しない、またはエラーメッセージ「wiringPi.h: No such file or directory」が表示される場合は、 :ref:`install_wiringpi` を参照してください。

**コード**

.. code-block:: c

    #include <wiringPi.h>
    #include <stdio.h>

    #define speedPin		0  
    #define Gpin		2
    #define Rpin		3

    void LED(int color)
    {
        pinMode(Gpin, OUTPUT);
        pinMode(Rpin, OUTPUT);
        if (color == 0){
            digitalWrite(Rpin, HIGH);
            digitalWrite(Gpin, LOW);
        }
        else if (color == 1){
            digitalWrite(Rpin, LOW);
            digitalWrite(Gpin, HIGH);
        }
    }

    void Print(int x){
        if ( x == 0 ){
            printf("Light was blocked\n");
        }
    }

    int main(void){

        if(wiringPiSetup() == -1){ //when initialize wiring failed,print messageto screen
            printf("setup wiringPi failed !");
            return 1; 
        }

        pinMode(speedPin, INPUT);
        int temp;
        while(1){
            //Reverse the input of speedPin
            if ( digitalRead(speedPin) == 0 ){  
                temp = 1;
            }
            if ( digitalRead(speedPin) == 1 ){
                temp = 0;
            }

            LED(temp);
            Print(temp);
        }
        return 0;
    }

**コード説明**

.. code-block:: c

    void LED(int color)
    {
        pinMode(Gpin, OUTPUT);
        pinMode(Rpin, OUTPUT);
        if (color == 0){
            digitalWrite(Rpin, HIGH);
            digitalWrite(Gpin, LOW);
        }
        else if (color == 1){
            digitalWrite(Rpin, LOW);
            digitalWrite(Gpin, HIGH);
        }
    }    

2つのLEDを制御するための ``LED()`` 関数を設定します。この関数のパラメータは ``color`` です。

``color`` が0の場合、 ``Rpin`` を ``HIGH`` に設定します（赤いLEDを点灯）し、 ``Gpin`` を ``LOW`` に設定します（緑のLEDを消灯）。 ``color`` が1の場合、緑のLEDを点灯し、赤いLEDを消灯します。

.. code-block:: c

    while(1){
        //Reverse the input of speedPin
        if ( digitalRead(speedPin) == 0 ){  
            temp = 1;
        }
        if ( digitalRead(speedPin) == 1 ){
            temp = 0;
        }

        LED(temp);
        Print(temp);
    }

速度センサーモジュールの隙間に障害物を置くと、 ``speedPin`` は低レベル（0）となり、 ``LED(1)`` 関数を呼び出して緑のLEDを点灯させ、"Light was blocked!"と表示されます。

現象の画像
-----------------------

.. image:: ../img/2.2.6photo_interrrupter.JPG
   :width: 500
   :align: center