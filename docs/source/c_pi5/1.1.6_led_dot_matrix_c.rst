.. note::

    Ciao, benvenuto nella Community di appassionati di SunFounder Raspberry Pi & Arduino & ESP32 su Facebook! Approfondisci Raspberry Pi, Arduino ed ESP32 insieme ad altri appassionati.

    **Perch√© unirti a noi?**

    - **Supporto esperto**: Risolvi problemi post-vendita e sfide tecniche con l'aiuto della nostra comunit√† e del nostro team.
    - **Impara e condividi**: Scambia consigli e tutorial per migliorare le tue competenze.
    - **Anteprime esclusive**: Ottieni accesso anticipato agli annunci di nuovi prodotti e alle anteprime.
    - **Sconti speciali**: Approfitta di sconti esclusivi sui nostri prodotti pi√π recenti.
    - **Promozioni festive e omaggi**: Partecipa a omaggi e promozioni festive.

    üëâ Pronto a esplorare e creare con noi? Clicca su [|link_sf_facebook|] e unisciti oggi stesso!

.. _1.1.6_c_pi5:

1.1.6 Modulo Matrice LED
=============================

Introduzione
--------------------

In questo progetto, imparerai a utilizzare il Modulo Matrice LED. Il Modulo Matrice LED utilizza il driver MAX7219 per gestire la matrice LED 8 x 8.

Componenti necessari
------------------------------

In questo progetto, abbiamo bisogno dei seguenti componenti.

.. image:: ../img/list_dot.png

√à sicuramente conveniente acquistare un kit completo, ecco il link:

.. list-table::
    :widths: 20 20 20
    :header-rows: 1

    *   - Nome	
        - COMPONENTI IN QUESTO KIT
        - LINK
    *   - Raphael Kit
        - 337
        - |link_Raphael_kit|

Puoi anche acquistarli separatamente dai link sottostanti.

.. list-table::
    :widths: 30 20
    :header-rows: 1

    *   - INTRODUZIONE COMPONENTI
        - LINK PER L'ACQUISTO

    *   - :ref:`cpn_gpio_extension_board`
        - |link_gpio_board_buy|
    *   - :ref:`cpn_breadboard`
        - |link_breadboard_buy|
    *   - :ref:`cpn_wires`
        - |link_wires_buy|
    *   - :ref:`cpn_dot_matrix`
        - |link_led_matrix_buy|

Schema di Collegamento
-----------------------

============ ======== ======== ====
T-Board Name physical wiringPi BCM
SPIMOSI      Pin 19   12       MOSI
SPICE0       pin 24   10       CE0
SPISCLK      Pin 23   14       SCLK
============ ======== ======== ====

.. image:: ../img/schematic_dot.png

Procedure Sperimentali
----------------------------

**Passo 1:** Costruisci il circuito.

.. image:: ../img/1.1.6fritzing.png

.. nota::

    Accendi il SPI prima di iniziare l'esperimento, consulta :ref:`spi_configuration` per i dettagli. E serve anche la libreria :ref:`BCM2835`.

**Passo 2:** Accedi alla cartella del codice.

.. raw:: html

   <run></run>

.. code-block:: 

    cd ~/raphael-kit/c/1.1.6/

**Passo 3:** Compila il codice.

.. raw:: html

   <run></run>

.. code-block:: 

    make

**Passo 4:** Esegui il file eseguibile.

.. raw:: html

   <run></run>

.. code-block:: 

    sudo ./1.1.6_LedMatrix

Dopo l'esecuzione del codice, la matrice LED visualizzer√† da 0 a 9 e da A a Z in sequenza.

.. note::

    Se non funziona dopo l'esecuzione o appare un errore come: \"wiringPi.h: No such file or directory\", consulta :ref:`install_wiringpi`.

**Codice**

.. code-block:: c

    #include <bcm2835.h>
    #include <stdio.h>
    #include <string.h>
    #include <ctype.h>

    #define uchar unsigned char
    #define uint unsigned int

    #define Max7219_pinCS  RPI_GPIO_P1_24

    uchar disp1[36][8]={
    {0x3C,0x42,0x42,0x42,0x42,0x42,0x42,0x3C},//0
    {0x08,0x18,0x28,0x08,0x08,0x08,0x08,0x08},//1
    {0x7E,0x2,0x2,0x7E,0x40,0x40,0x40,0x7E},//2
    {0x3E,0x2,0x2,0x3E,0x2,0x2,0x3E,0x0},//3
    {0x8,0x18,0x28,0x48,0xFE,0x8,0x8,0x8},//4
    {0x3C,0x20,0x20,0x3C,0x4,0x4,0x3C,0x0},//5
    {0x3C,0x20,0x20,0x3C,0x24,0x24,0x3C,0x0},//6
    {0x3E,0x22,0x4,0x8,0x8,0x8,0x8,0x8},//7
    {0x0,0x3E,0x22,0x22,0x3E,0x22,0x22,0x3E},//8
    {0x3E,0x22,0x22,0x3E,0x2,0x2,0x2,0x3E},//9
    {0x8,0x14,0x22,0x3E,0x22,0x22,0x22,0x22},//A
    {0x3C,0x22,0x22,0x3E,0x22,0x22,0x3C,0x0},//B
    {0x3C,0x40,0x40,0x40,0x40,0x40,0x3C,0x0},//C
    {0x7C,0x42,0x42,0x42,0x42,0x42,0x7C,0x0},//D
    {0x7C,0x40,0x40,0x7C,0x40,0x40,0x40,0x7C},//E
    {0x7C,0x40,0x40,0x7C,0x40,0x40,0x40,0x40},//F
    {0x3C,0x40,0x40,0x40,0x40,0x44,0x44,0x3C},//G
    {0x44,0x44,0x44,0x7C,0x44,0x44,0x44,0x44},//H
    {0x7C,0x10,0x10,0x10,0x10,0x10,0x10,0x7C},//I
    {0x3C,0x8,0x8,0x8,0x8,0x8,0x48,0x30},//J
    {0x0,0x24,0x28,0x30,0x20,0x30,0x28,0x24},//K
    {0x40,0x40,0x40,0x40,0x40,0x40,0x40,0x7C},//L
    {0x81,0xC3,0xA5,0x99,0x81,0x81,0x81,0x81},//M
    {0x0,0x42,0x62,0x52,0x4A,0x46,0x42,0x0},//N
    {0x3C,0x42,0x42,0x42,0x42,0x42,0x42,0x3C},//O
    {0x3C,0x22,0x22,0x22,0x3C,0x20,0x20,0x20},//P
    {0x1C,0x22,0x22,0x22,0x22,0x26,0x22,0x1D},//Q
    {0x3C,0x22,0x22,0x22,0x3C,0x24,0x22,0x21},//R
    {0x0,0x1E,0x20,0x20,0x3E,0x2,0x2,0x3C},//S
    {0x0,0x3E,0x8,0x8,0x8,0x8,0x8,0x8},//T
    {0x42,0x42,0x42,0x42,0x42,0x42,0x22,0x1C},//U
    {0x42,0x42,0x42,0x42,0x42,0x42,0x24,0x18},//V
    {0x0,0x49,0x49,0x49,0x49,0x2A,0x1C,0x0},//W
    {0x0,0x41,0x22,0x14,0x8,0x14,0x22,0x41},//X
    {0x41,0x22,0x14,0x8,0x8,0x8,0x8,0x8},//Y
    {0x0,0x7F,0x2,0x4,0x8,0x10,0x20,0x7F},//Z
    };

    void Delay_xms(uint x)
    {
        bcm2835_delay(x);
    }
    //------------------------

    void Write_Max7219_byte(uchar DATA)
    {
        bcm2835_gpio_write(Max7219_pinCS,LOW);
        bcm2835_spi_transfer(DATA);
    }

    void Write_Max7219(uchar address1,uchar dat1)
    {
        bcm2835_gpio_write(Max7219_pinCS,LOW);
        Write_Max7219_byte(address1);
        Write_Max7219_byte(dat1); 
        bcm2835_gpio_write(Max7219_pinCS,HIGH);
    }

    void Init_MAX7219()
    {
        Write_Max7219(0x09,0x00);
        Write_Max7219(0x0a,0x03);
        Write_Max7219(0x0b,0x07);
        Write_Max7219(0x0c,0x01);
        Write_Max7219(0x0f,0x00);
    }

    void Init_BCM2835()
    {
        bcm2835_spi_begin();
        bcm2835_spi_setBitOrder(BCM2835_SPI_BIT_ORDER_MSBFIRST);
        bcm2835_spi_setDataMode(BCM2835_SPI_MODE0);
        bcm2835_spi_setClockDivider(BCM2835_SPI_CLOCK_DIVIDER_256);
        bcm2835_gpio_fsel(Max7219_pinCS, BCM2835_GPIO_FSEL_OUTP);
        bcm2835_gpio_write(disp1[0][0],HIGH);
    }

    int main(void)
    {
        uchar i,j;

        if (!bcm2835_init())
        {
            printf("Unable to init bcm2835.\n");
            return 1;
        }
        Init_BCM2835();
        Delay_xms(50);
        Init_MAX7219();
        while(1)
        {
            for(j=0;j<36;j++)
            {
                for(i=1;i<9;i++)
                {
                    Write_Max7219(i,disp1[j][i-1]);
                }
                Delay_xms(1000);
            }
        }
        // bcm2835_spi_end();
        // bcm2835_close();
        return 0;
    }

**Spiegazione del Codice**

.. code-block:: c

    #define Max7219_pinCS  24

Il pin cs della Matrice LED √® collegato al pin 24.
.. note::

    Quando si hanno pi√π dispositivi che richiedono comunicazione spi, basta collegare i pin cs su pin differenti.

.. code-block:: c

    if (!bcm2835_init())
	{
		printf("Unable to init bcm2835.\n");
		return 1;
	}

Verifica se la libreria bcm2835 √® installata correttamente, in caso contrario stampa il messaggio "Impossibile inizializzare bcm2835".

.. code-block:: c

    Init_BCM2835();
	Delay_xms(50);
	Init_MAX7219();

Inizializza le librerie e il modulo.

.. code-block:: c

    while(1)
    {
        for(j=0;j<36;j++)
        {
            for(i=1;i<9;i++)
            {
                Write_Max7219(i,disp1[j][i-1]);
            }
            Delay_xms(1000);
        }
    }


La funzione ``Write_Max7219()`` consente di visualizzare il carattere specificato sulla Matrice LED, dove il primo parametro indica la riga in cui viene visualizzato e il secondo parametro immette un numero binario a 8 bit o un numero esadecimale che indica quali luci sono accese o spente in quella riga (0 significa spento, 1 significa acceso).

La variabile ``j`` rappresenta le righe nell'array ``disp1[]`` (35 righe) e la variabile ``i`` rappresenta la colonna (8 colonne).
    
Ad esempio, quando j=1 e i=2, il valore ``disp1[1][1]`` (0x18) viene visualizzato sulla matrice LED. i ripete 8 volte per visualizzare il numero 1 sulla matrice. Dopo 35 cicli di j, da 0 a 9 e da A a Z vengono visualizzati sulla matrice.

    .. image:: ../img/led_not.png
        :width: 400

Immagine del Fenomeno
---------------------------

.. image:: ../img/1.1.6led_dot_matrix.JPG
