.. note::

    こんにちは、SunFounderのRaspberry Pi & Arduino & ESP32愛好家コミュニティへようこそ！Facebook上でRaspberry Pi、Arduino、ESP32についてもっと深く掘り下げ、他の愛好家と交流しましょう。

    **参加する理由は？**

    - **エキスパートサポート**：コミュニティやチームの助けを借りて、販売後の問題や技術的な課題を解決します。
    - **学び＆共有**：ヒントやチュートリアルを交換してスキルを向上させましょう。
    - **独占的なプレビュー**：新製品の発表や先行プレビューに早期アクセスしましょう。
    - **特別割引**：最新製品の独占割引をお楽しみください。
    - **祭りのプロモーションとギフト**：ギフトや祝日のプロモーションに参加しましょう。

    👉 私たちと一緒に探索し、創造する準備はできていますか？[|link_sf_facebook|]をクリックして今すぐ参加しましょう！

.. _2.2.4_c_pi5:

2.2.4 リードスイッチモジュール
==============================

はじめに
-------------------

このプロジェクトでは、磁場を利用して動作する電気スイッチであるリードスイッチについて学びます。

.. image:: ../img/2.2.4reed_switch.png
    :width: 300
    :align: center

必要な部品
------------------------------

このプロジェクトには、以下のコンポーネントが必要です。

.. image:: ../img/2.2.4component.png
    :width: 700
    :align: center

一式を購入するのが便利です。リンクは以下のとおりです：

.. list-table::
    :widths: 20 20 20
    :header-rows: 1

    *   - 名前
        - このキットのアイテム
        - リンク
    *   - Raphael Kit
        - 337
        - |link_Raphael_kit|

以下のリンクから個別に購入することもできます。

.. list-table::
    :widths: 30 20
    :header-rows: 1

    *   - コンポーネントの紹介
        - 購入リンク

    *   - :ref:`cpn_gpio_board`
        - |link_gpio_board_buy|
    *   - :ref:`cpn_breadboard`
        - |link_breadboard_buy|
    *   - :ref:`cpn_wires`
        - |link_wires_buy|
    *   - :ref:`cpn_resistor`
        - |link_resistor_buy|
    *   - :ref:`cpn_led`
        - |link_led_buy|
    *   - :ref:`cpn_reed_switch`
        - |link_reed_switch_buy|

回路図
-----------------------

============ ======== ======== ===
T-Board Name physical wiringPi BCM
GPIO17       Pin 11   0        17
GPIO27       Pin 13   2        27
GPIO22       Pin 15   3        22
============ ======== ======== ===

.. image:: ../img/reed_schematic.png
    :width: 400
    :align: center

.. image:: ../img/reed_schematic2.png
    :width: 400
    :align: center

実験手順
-------------------------------

**ステップ1:** 回路を作成します。

.. image:: ../img/2.2.4fritzing.png
    :width: 700
    :align: center

**ステップ2:** ディレクトリを変更します。

.. raw:: html

   <run></run>

.. code-block::

    cd ~/raphael-kit/c/2.2.4/

**ステップ3:** コンパイルします。

.. raw:: html

   <run></run>

.. code-block::

    gcc 2.2.4_ReedSwitch.c -lwiringPi

**ステップ4:** 実行します。

.. raw:: html

   <run></run>

.. code-block::

    sudo ./a.out

コードを実行すると、緑色のLEDが点灯します。リードスイッチモジュールに磁石を近づけると、赤色のLEDが点灯します。磁石を取り除くと、緑色のLEDが再び点灯します。

.. note::

    実行後に動作しない、または「wiringPi.h: No such file or directory」というエラーメッセージが表示される場合は、 :ref:`install_wiringpi` を参照してください。

**コード**

.. code-block:: c

    #include <wiringPi.h>
    #include <stdio.h>

    #define ReedPin		0
    #define Gpin		2
    #define Rpin		3

    void LED(char* color)
    {
        pinMode(Gpin, OUTPUT);
        pinMode(Rpin, OUTPUT);
        if (color == "RED")
        {
            digitalWrite(Rpin, HIGH);
            digitalWrite(Gpin, LOW);
        }
        else if (color == "GREEN")
        {
            digitalWrite(Rpin, LOW);
            digitalWrite(Gpin, HIGH);
        }
        else
            printf("LED Error");
    }

    int main(void)
    {
        if(wiringPiSetup() == -1){ //when initialize wiring failed,print messageto screen
            printf("setup wiringPi failed !");
            return 1; 
        }

        pinMode(ReedPin, INPUT);
        LED("GREEN");
        
        while(1){
            if(0 == digitalRead(ReedPin)){
                delay(10);
                if(0 == digitalRead(ReedPin)){
                    LED("RED");	
                    printf("Detected Magnetic Material!\n");	
                }
            }
            else if(1 == digitalRead(ReedPin)){
                delay(10);
                if(1 == digitalRead(ReedPin)){
                    while(!digitalRead(ReedPin));
                    LED("GREEN");
                }
            }
        }
        return 0;
    }

**コード説明**

.. code-block:: c

    #define ReedPin		0
    #define Gpin		2
    #define Rpin		3

T_Extension BoardのGPIO17、GPIO27、GPIO22は、wiringPiのGPIO0、GPIO2、GPIO3に対応しています。GPIO0、GPIO2、GPIO3を ``ReedPin``、 ``Gpin``、 ``Rpin`` に割り当てます。

.. code-block:: c

    void LED(char* color)
    {
        pinMode(Gpin, OUTPUT);
        pinMode(Rpin, OUTPUT);
        if (color == "RED")
        {
            digitalWrite(Rpin, HIGH);
            digitalWrite(Gpin, LOW);
        }
        else if (color == "GREEN")
        {
            digitalWrite(Rpin, LOW);
            digitalWrite(Gpin, HIGH);
        }
        else
            printf("LED Error");
    }

2つのLEDを制御するための ``LED()`` 関数を設定します。この関数のパラメータは ``color`` です。

``color`` が ``"RED"`` の場合、 ``Rpin`` を ``HIGH`` に設定して赤いLEDを点灯し、 ``Gpin`` を ``LOW`` に設定して緑のLEDを消灯します。 ``color`` が ``"GREEN"`` の場合、緑のLEDを点灯し、赤いLEDを消灯します。

.. code-block:: c

    while(1){
            if(0 == digitalRead(ReedPin)){
                delay(10);
                if(0 == digitalRead(ReedPin)){
                    LED("RED");	
                    printf("Detected Magnetic Material!\n");	
                }
            }
            else if(1 == digitalRead(ReedPin)){
                delay(10);
                if(1 == digitalRead(ReedPin)){
                    while(!digitalRead(ReedPin));
                    LED("GREEN");
                }
            }
        }

リードスイッチモジュールの値を読み取り、2回読み取った値が0の場合、 ``LED("RED")`` を呼び出して赤いLEDを点灯させ、 ``"Detected Magnetic Material!"`` と表示します。

値が1の場合、緑のLEDが点灯します。

現象の画像
------------------------

.. image:: ../img/2.2.4reed_switch.JPG
    :width: 500
    :align: center