.. note::

    Ciao, benvenuto nella community di SunFounder Raspberry Pi & Arduino & ESP32 Enthusiasts su Facebook! Immergiti pi√π a fondo in Raspberry Pi, Arduino ed ESP32 insieme ad altri appassionati.

    **Perch√© unirti?**

    - **Supporto esperto**: Risolvi i problemi post-vendita e le sfide tecniche con l'aiuto della nostra community e del nostro team.
    - **Impara e condividi**: Scambia suggerimenti e tutorial per migliorare le tue competenze.
    - **Anteprime esclusive**: Ottieni accesso anticipato a nuovi annunci di prodotti e anteprime esclusive.
    - **Sconti speciali**: Goditi sconti esclusivi sui nostri prodotti pi√π recenti.
    - **Promozioni festive e omaggi**: Partecipa a concorsi e promozioni festive.

    üëâ Pronto a esplorare e creare con noi? Clicca su [|link_sf_facebook|] e unisciti oggi stesso!

.. _2.2.4_c_pi5:

2.2.4 Modulo Reed Switch
===========================

Introduzione
---------------

In questo progetto impareremo a conoscere il reed switch, un interruttore elettrico che si attiva grazie a un campo magnetico applicato.

.. image:: ../img/2.2.4reed_switch.png
    :width: 300
    :align: center

Componenti necessari
-----------------------

In questo progetto abbiamo bisogno dei seguenti componenti.

.. image:: ../img/2.2.4component.png
    :width: 700
    :align: center

√à sicuramente conveniente acquistare un kit completo, ecco il link:

.. list-table::
    :widths: 20 20 20
    :header-rows: 1

    *   - Nome	
        - ELEMENTI IN QUESTO KIT
        - LINK
    *   - Kit Raphael
        - 337
        - |link_Raphael_kit|

Puoi anche acquistarli separatamente dai link sottostanti.

.. list-table::
    :widths: 30 20
    :header-rows: 1

    *   - INTRODUZIONE COMPONENTE
        - LINK PER L'ACQUISTO

    *   - :ref:`cpn_gpio_extension_board`
        - |link_gpio_board_buy|
    *   - :ref:`cpn_breadboard`
        - |link_breadboard_buy|
    *   - :ref:`cpn_wires`
        - |link_wires_buy|
    *   - :ref:`cpn_resistor`
        - |link_resistor_buy|
    *   - :ref:`cpn_led`
        - |link_led_buy|
    *   - :ref:`cpn_reed_switch`
        - |link_reed_switch_buy|

Schema elettrico
-----------------------

============ ======== ======== ===
T-Board Name physical wiringPi BCM
GPIO17       Pin 11   0        17
GPIO27       Pin 13   2        27
GPIO22       Pin 15   3        22
============ ======== ======== ===

.. image:: ../img/reed_schematic.png
    :width: 400
    :align: center

.. image:: ../img/reed_schematic2.png
    :width: 400
    :align: center

Procedure sperimentali
--------------------------

**Passo 1:** Costruisci il circuito.

.. image:: ../img/2.2.4fritzing.png
    :width: 700
    :align: center

**Passo 2:** Cambia la directory.

.. raw:: html

   <run></run>

.. code-block::

    cd ~/raphael-kit/c/2.2.4/

**Passo 3:** Compila.

.. raw:: html

   <run></run>

.. code-block::

    gcc 2.2.4_ReedSwitch.c -lwiringPi

**Passo 4:** Esegui.

.. raw:: html

   <run></run>

.. code-block::

    sudo ./a.out

Il LED verde si accender√† quando il codice sar√† eseguito. Se si avvicina un magnete al modulo reed switch, il LED rosso si accende; allontanando il magnete, si riaccende il LED verde.

.. note::

    Se non funziona dopo l'esecuzione o compare un messaggio di errore: \"wiringPi.h: No such file or directory\", consulta :ref:`install_wiringpi`.


**Codice**


.. code-block:: c

    #include <wiringPi.h>
    #include <stdio.h>

    #define ReedPin		0
    #define Gpin		2
    #define Rpin		3

    void LED(char* color)
    {
        pinMode(Gpin, OUTPUT);
        pinMode(Rpin, OUTPUT);
        if (color == "RED")
        {
            digitalWrite(Rpin, HIGH);
            digitalWrite(Gpin, LOW);
        }
        else if (color == "GREEN")
        {
            digitalWrite(Rpin, LOW);
            digitalWrite(Gpin, HIGH);
        }
        else
            printf("LED Error");
    }

    int main(void)
    {
        if(wiringPiSetup() == -1){ // se l'inizializzazione di wiring fallisce, stampa un messaggio sullo schermo
            printf("setup wiringPi failed !");
            return 1; 
        }

        pinMode(ReedPin, INPUT);
        LED("GREEN");
        
        while(1){
            if(0 == digitalRead(ReedPin)){
                delay(10);
                if(0 == digitalRead(ReedPin)){
                    LED("RED");	
                    printf("Detected Magnetic Material!\n");	
                }
            }
            else if(1 == digitalRead(ReedPin)){
                delay(10);
                if(1 == digitalRead(ReedPin)){
                    while(!digitalRead(ReedPin));
                    LED("GREEN");
                }
            }
        }
        return 0;
    }

Spiegazione del Codice
--------------------------

.. code-block:: c

    #define ReedPin		0
    #define Gpin		2
    #define Rpin		3

Il pin GPIO17, GPIO27 e GPIO22 della T_Extension Board corrispondono 
rispettivamente ai GPIO0, GPIO2 e GPIO3 in wiringPi. Assegna GPIO0, 
GPIO2 e GPIO3 a ``ReedPin``, ``Gpin`` e ``Rpin``.

.. code-block:: c

    void LED(char* color)
    {
        pinMode(Gpin, OUTPUT);
        pinMode(Rpin, OUTPUT);
        if (color == "RED")
        {
            digitalWrite(Rpin, HIGH);
            digitalWrite(Gpin, LOW);
        }
        else if (color == "GREEN")
        {
            digitalWrite(Rpin, LOW);
            digitalWrite(Gpin, HIGH);
        }
        else
            printf("LED Error");
    }

Imposta una funzione ``LED()`` per controllare i 2 LED, il parametro di questa funzione √® ``color``.

Quando ``color`` √® ``"RED"``, imposta ``Rpin`` su ``HIGH`` (accendi il LED rosso) e ``Gpin`` su ``LOW`` (spegni il LED verde); quando ``color`` √® ``"GREEN"``, accendi il LED verde e spegni quello rosso.

.. code-block:: c

    while(1){
            if(0 == digitalRead(ReedPin)){
                delay(10);
                if(0 == digitalRead(ReedPin)){
                    LED("RED");	
                    printf("Detected Magnetic Material!\n");	
                }
            }
            else if(1 == digitalRead(ReedPin)){
                delay(10);
                if(1 == digitalRead(ReedPin)){
                    while(!digitalRead(ReedPin));
                    LED("GREEN");
                }
            }
        }

Leggi il valore del modulo reed switch, se il valore letto 2 volte √® 0, chiama ``LED("RED")`` per accendere il LED rosso e stampa ``"Rilevato materiale magnetico!"``.

Se il valore √® 1, il LED verde si accende.

Immagine del fenomeno
-------------------------

.. image:: ../img/2.2.4reed_switch.JPG
    :width: 500
    :align: center