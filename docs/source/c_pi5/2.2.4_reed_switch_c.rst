 
.. note::

    Bonjour et bienvenue dans la Communaut√© Facebook des passionn√©s de Raspberry Pi, Arduino et ESP32 de SunFounder ! Plongez plus profond√©ment dans l'univers des Raspberry Pi, Arduino et ESP32 avec d'autres passionn√©s.

    **Pourquoi rejoindre ?**

    - **Support d'experts** : R√©solvez les probl√®mes apr√®s-vente et les d√©fis techniques avec l'aide de notre communaut√© et de notre √©quipe.
    - **Apprendre et partager** : √âchangez des astuces et des tutoriels pour am√©liorer vos comp√©tences.
    - **Aper√ßus exclusifs** : Acc√©dez en avant-premi√®re aux annonces de nouveaux produits et aux aper√ßus.
    - **R√©ductions sp√©ciales** : Profitez de r√©ductions exclusives sur nos produits les plus r√©cents.
    - **Promotions festives et cadeaux** : Participez √† des cadeaux et des promotions de vacances.

    üëâ Pr√™t √† explorer et √† cr√©er avec nous ? Cliquez [|link_sf_facebook|] et rejoignez-nous aujourd'hui !

.. _2.2.4_c_pi5:

2.2.4 Module √† interrupteur Reed
==================================

Introduction
-------------------

Dans ce projet, nous allons d√©couvrir l'interrupteur Reed, qui est un interrupteur √©lectrique fonctionnant au moyen d'un champ magn√©tique appliqu√©.

.. image:: ../img/2.2.4reed_switch.png
    :width: 300
    :align: center

Composants n√©cessaires
------------------------------

Dans ce projet, nous avons besoin des composants suivants. 

.. image:: ../img/2.2.4component.png
    :width: 700
    :align: center

Il est certainement pratique d'acheter un kit complet, voici le lien : 

.. list-table::
    :widths: 20 20 20
    :header-rows: 1

    *   - Nom	
        - √âL√âMENTS DANS CE KIT
        - LIEN
    *   - Kit Raphael
        - 337
        - |link_Raphael_kit|

Vous pouvez √©galement les acheter s√©par√©ment via les liens ci-dessous.

.. list-table::
    :widths: 30 20
    :header-rows: 1

    *   - INTRODUCTION DES COMPOSANTS
        - LIEN D'ACHAT

    *   - :ref:`cpn_gpio_extension_board`
        - |link_gpio_board_buy|
    *   - :ref:`cpn_breadboard`
        - |link_breadboard_buy|
    *   - :ref:`cpn_wires`
        - |link_wires_buy|
    *   - :ref:`cpn_resistor`
        - |link_resistor_buy|
    *   - :ref:`cpn_led`
        - |link_led_buy|
    *   - :ref:`cpn_reed_switch`
        - |link_reed_switch_buy|

Diagramme Sch√©matique
-----------------------

============== ========= ========= ===
Nom de T-Board  physique  wiringPi BCM
GPIO17          Broche 11 0        17
GPIO27          Broche 13 2        27
GPIO22          Broche 15 3        22
============    ========= ======== ===

.. image:: ../img/reed_schematic.png
    :width: 400
    :align: center

.. image:: ../img/reed_schematic2.png
    :width: 400
    :align: center

Proc√©dures Exp√©rimentales
-------------------------------

**√âtape 1 :** Construire le circuit.

.. image:: ../img/2.2.4fritzing.png
    :width: 700
    :align: center

**√âtape 2 :** Changer de r√©pertoire.

.. raw:: html

   <run></run>

.. code-block::

    cd ~/raphael-kit/c/2.2.4/

**√âtape 3 :** Compiler.

.. raw:: html

   <run></run>

.. code-block::

    gcc 2.2.4_ReedSwitch.c -lwiringPi

**√âtape 4 :** Ex√©cuter.

.. raw:: html

   <run></run>

.. code-block::

    sudo ./a.out

La LED verte s'allumera lorsque le code sera ex√©cut√©. Si un aimant est plac√© pr√®s du module de l'interrupteur Reed, la LED rouge s'allume ; retirez l'aimant et la LED verte s'allume √† nouveau.

.. note::

    Si cela ne fonctionne pas apr√®s l'ex√©cution ou s'il y a une erreur indiquant : \"wiringPi.h: Aucun fichier ou r√©pertoire de ce type\", veuillez vous r√©f√©rer √† :ref:`install_wiringpi`.

**Code**

.. code-block:: c

    #include <wiringPi.h>
    #include <stdio.h>

    #define ReedPin		0
    #define Gpin		2
    #define Rpin		3

    void LED(char* color)
    {
        pinMode(Gpin, OUTPUT);
        pinMode(Rpin, OUTPUT);
        if (color == "RED")
        {
            digitalWrite(Rpin, HIGH);
            digitalWrite(Gpin, LOW);
        }
        else if (color == "GREEN")
        {
            digitalWrite(Rpin, LOW);
            digitalWrite(Gpin, HIGH);
        }
        else
            printf("LED Error");
    }

    int main(void)
    {
        if(wiringPiSetup() == -1){ //when initialize wiring failed,print messageto screen
            printf("setup wiringPi failed !");
            return 1; 
        }

        pinMode(ReedPin, INPUT);
        LED("GREEN");
        
        while(1){
            if(0 == digitalRead(ReedPin)){
                delay(10);
                if(0 == digitalRead(ReedPin)){
                    LED("RED");	
                    printf("Detected Magnetic Material!\n");	
                }
            }
            else if(1 == digitalRead(ReedPin)){
                delay(10);
                if(1 == digitalRead(ReedPin)){
                    while(!digitalRead(ReedPin));
                    LED("GREEN");
                }
            }
        }
        return 0;
    }


**Explication du Code**

.. code-block:: c

    #define ReedPin		0
    #define Gpin		2
    #define Rpin		3

Les broches GPIO17, GPIO27 et GPIO22 de la carte d'extension T sont correspondantes aux GPIO0, 
GPIO2 et GPIO3 dans wiringPi. Attribuez les GPIO0, GPIO2 et GPIO3 √† ``ReedPin``, ``Gpin`` et ``Rpin``.

.. code-block:: c

    void LED(char* color)
    {
        pinMode(Gpin, OUTPUT);
        pinMode(Rpin, OUTPUT);
        if (color == "RED")
        {
            digitalWrite(Rpin, HIGH);
            digitalWrite(Gpin, LOW);
        }
        else if (color == "GREEN")
        {
            digitalWrite(Rpin, LOW);
            digitalWrite(Gpin, HIGH);
        }
        else
            printf("LED Error");
    }

D√©finissez une fonction ``LED()`` pour contr√¥ler les 2 LED, le param√®tre de cette fonction est ``color``.

Lorsque ``color`` est ``"RED"``, d√©finissez ``Rpin`` sur ``HIGH`` (allumer la LED rouge) et ``Gpin`` sur ``LOW`` (√©teindre la LED verte) ; lorsque ``color`` est ``"GREEN"``, allumez la LED verte et √©teignez la LED rouge. 

.. code-block:: c

    while(1){
            if(0 == digitalRead(ReedPin)){
                delay(10);
                if(0 == digitalRead(ReedPin)){
                    LED("RED");	
                    printf("Detected Magnetic Material!\n");	
                }
            }
            else if(1 == digitalRead(ReedPin)){
                delay(10);
                if(1 == digitalRead(ReedPin)){
                    while(!digitalRead(ReedPin));
                    LED("GREEN");
                }
            }
        }

Lisez la valeur du module d'interrupteur √† lames, si la valeur lue deux fois est 0, appelez ``LED("RED")`` pour allumer la LED rouge et imprimez ``"Mat√©riau magn√©tique d√©tect√© !"``.

Si la valeur est 1, la LED verte s'allume.


Photo du Ph√©nom√®ne
------------------------

.. image:: ../img/2.2.4reed_switch.JPG
    :width: 500
    :align: center