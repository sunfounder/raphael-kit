 
.. note::

    Bonjour et bienvenue dans la Communaut√© Facebook des passionn√©s de Raspberry Pi, Arduino et ESP32 de SunFounder ! Plongez plus profond√©ment dans l'univers des Raspberry Pi, Arduino et ESP32 avec d'autres passionn√©s.

    **Pourquoi rejoindre ?**

    - **Support d'experts** : R√©solvez les probl√®mes apr√®s-vente et les d√©fis techniques avec l'aide de notre communaut√© et de notre √©quipe.
    - **Apprendre et partager** : √âchangez des astuces et des tutoriels pour am√©liorer vos comp√©tences.
    - **Aper√ßus exclusifs** : Acc√©dez en avant-premi√®re aux annonces de nouveaux produits et aux aper√ßus.
    - **R√©ductions sp√©ciales** : Profitez de r√©ductions exclusives sur nos produits les plus r√©cents.
    - **Promotions festives et cadeaux** : Participez √† des cadeaux et des promotions de vacances.

    üëâ Pr√™t √† explorer et √† cr√©er avec nous ? Cliquez [|link_sf_facebook|] et rejoignez-nous aujourd'hui !

.. _2.2.10_c_pi5:

2.2.10 Module RFID MFRC522
================================

Introduction
---------------

L'identification par radiofr√©quence (RFID) d√©signe les technologies utilisant
la communication sans fil entre un objet (ou tag) et un dispositif
interrogateur (ou lecteur) pour suivre et identifier automatiquement ces objets.

Certaines des applications les plus courantes de cette technologie incluent les cha√Ænes d'approvisionnement au d√©tail,
les cha√Ænes d'approvisionnement militaires, les m√©thodes de paiement automatis√©es,
le suivi et la gestion des bagages, le suivi des documents et la gestion pharmaceutique, pour ne citer que quelques exemples.

Dans ce projet, nous utiliserons le RFID pour lire et √©crire.

Composants requis
------------------------------

Dans ce projet, nous avons besoin des composants suivants.

.. image:: ../img/list_2.2.7.png

Il est certainement pratique d'acheter un kit complet, voici le lien :

.. list-table::
    :widths: 20 20 20
    :header-rows: 1

    *   - Nom	
        - ARTICLES DANS CE KIT
        - LIEN
    *   - Kit Raphael
        - 337
        - |link_Raphael_kit|

Vous pouvez √©galement les acheter s√©par√©ment en utilisant les liens ci-dessous.

.. list-table::
    :widths: 30 20
    :header-rows: 1

    *   - INTRODUCTION DU COMPOSANT
        - LIEN D'ACHAT

    *   - :ref:`cpn_gpio_extension_board`
        - |link_gpio_board_buy|
    *   - :ref:`cpn_breadboard`
        - |link_breadboard_buy|
    *   - :ref:`cpn_wires`
        - |link_wires_buy|
    *   - :ref:`cpn_mfrc522`
        - |link_mfrc522_rfid_buy|

Sch√©ma de c√¢blage
-----------------

.. image:: ../img/image331.png

Proc√©dures exp√©rimentales
-----------------------

**√âtape 1 :** Construire le circuit.

.. image:: ../img/image232.png

**√âtape 2 :** Configurer SPI (r√©f√©rez-vous √† :ref:`spi_configuration` pour plus de d√©tails. Si vous avez d√©j√† configur√© SPI, passez cette √©tape.)

**√âtape 3 :** Aller au dossier du code.

.. raw:: html

   <run></run>

.. code-block:: 

    cd ~/raphael-kit/c/2.2.10/

**√âtape 4 :** Compiler le code.

.. raw:: html

   <run></run>

.. code-block:: 

    make read
    make write

**√âtape 5 :** Apr√®s avoir ex√©cut√© ``./write``, entrez les informations, telles que le nom de la personne, puis placez le tag ou la carte sur le module MRC522 et attendez que l'√©criture soit termin√©e.

.. raw:: html

   <run></run>

.. code-block::

    sudo ./write

**√âtape 6 :** Maintenant, ex√©cutez ``./read`` pour lire les informations du tag ou de la carte que vous avez √©crites.

.. raw:: html

   <run></run>

.. code-block:: 

    sudo ./read

.. note::

    Si cela ne fonctionne pas apr√®s l'ex√©cution ou s'il y a un message d'erreur : \"wiringPi.h: No such file or directory\", veuillez vous r√©f√©rer √† :ref:`install_wiringpi`.

**Explication du code**

.. code-block:: c

    InitRc522();

Cette fonction est utilis√©e pour initialiser le module RFID RC522.

.. code-block:: c

    uint8_t read_card_data();

Cette fonction est utilis√©e pour lire les donn√©es de la carte et si la lecture r√©ussit, elle retournera "1".

.. code-block:: c

    uint8_t write_card_data(uint8_t *data);

Cette fonction est utilis√©e pour √©crire les donn√©es de la carte et retourne "1" si l'√©criture r√©ussit. ``*data`` est l'information qui sera √©crite sur la carte.

Image du ph√©nom√®ne
------------------

.. image:: ../img/image233.jpeg
